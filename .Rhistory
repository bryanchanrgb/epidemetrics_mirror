+ labs(title = "Deaths in First Wave Against Second Wave", x = "New Deaths per Day at First Peak per 10,000 Population", y = "New Deaths per Day at Second Peak per 10,000 Population"))
figure_5
figure_5_a <- (ggplot(figure_5_data, aes(x = DEAD_FIRST_WAVE_PER_10K, y = DEAD_SECOND_WAVE_PER_10K))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=figure_5_data,
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
#+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths in First Wave Against Second Wave", x = "Total Number of Deaths in First Wave per 10,000 Population", y = "Total Number of Deaths in Second Wave per 10,000 Population"))
ggsave("./plots/figure_5_a.png", plot = figure_5_a, width = 7,  height = 7)
figure_5_b <- (ggplot(figure_5_data, aes(x = DEAD_PEAK_1_PER_10K, y = DEAD_PEAK_2_PER_10K))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=figure_5_data,
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
#+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "New Deaths per Day in First Wave Against Second Wave", x = "New Deaths per Day at First Peak per 10,000 Population", y = "New Deaths per Day at Second Peak per 10,000 Population"))
ggsave("./plots/figure_5_b.png", plot = figure_5_b, width = 7,  height = 7)
dir.create('./plots/figure_2c/y_duration/')
dir.create('./plots/figure_2c/y_dead/')
dir.create('./plots/figure_2c/y_duration/x_days_to_threshold')
dir.create('./plots/figure_2c/y_dead/x_proportion_first_wave')
dir.create('./plots/figure_2c/y_duration/x_days_to_threshold')
dir.create('./plots/figure_2c/y_dead/x_proportion_first_wave')
dir.create('./plots/figure_2c/y_duration/x_days_to_threshold')
dir.create('./plots/figure_2c/y_dead/x_days_to_threshold')
dir.create('./plots/figure_2c/y_duration/x_proportion_first_wave')
dir.create('./plots/figure_2c/y_dead/x_proportion_first_wave')
# Define explanatory variables
x_vars = c("GOV_MAX_SI_DAYS_FROM_T0",
"MAX_SI",
"SI_AT_PEAK_1",
"SI_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"C1_SCHOOL_CLOSING_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"C2_WORKPLACE_CLOSING_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"C3_CANCEL_PUBLIC_EVENTS_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"C4_RESTRICTIONS_ON_GATHERINGS_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"C5_CLOSE_PUBLIC_TRANSPORT_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"C6_STAY_AT_HOME_REQUIREMENTS_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"C7_RESTRICTIONS_ON_INTERNAL_MOVEMENT_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"C8_INTERNATIONAL_TRAVEL_CONTROLS_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"H2_TESTING_POLICY_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"H3_CONTACT_TRACING_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",
"SI_DAYS_TO_THRESHOLD",
"C1_SCHOOL_CLOSING_DAYS_TO_THRESHOLD",
"C2_WORKPLACE_CLOSING_DAYS_TO_THRESHOLD",
"C3_CANCEL_PUBLIC_EVENTS_DAYS_TO_THRESHOLD",
"C4_RESTRICTIONS_ON_GATHERINGS_DAYS_TO_THRESHOLD",
"C5_CLOSE_PUBLIC_TRANSPORT_DAYS_TO_THRESHOLD",
"C6_STAY_AT_HOME_REQUIREMENTS_DAYS_TO_THRESHOLD",
"C7_RESTRICTIONS_ON_INTERNAL_MOVEMENT_DAYS_TO_THRESHOLD",
"C8_INTERNATIONAL_TRAVEL_CONTROLS_DAYS_TO_THRESHOLD",
"H2_TESTING_POLICY_DAYS_TO_THRESHOLD",
"H3_CONTACT_TRACING_DAYS_TO_THRESHOLD")
for (x in x_vars) {
y = "EPI_DEAD_PER_10K" # with log axis
figure_2c_loop <- (ggplot(figure_2c_data, aes_string(x = x, y = y, colour = "CLASS"))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries)),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave")))
if (grepl('DAYS_TO_THRESHOLD', x, fixed=TRUE)){
ggsave(paste("./plots/figure_2c/y_dead/x_days_to_threshold/figure_2c_",x,"_",y,".png",sep=''), plot = figure_2c_loop, width = 9,  height = 7)
} else if (grepl('DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION', x, fixed=TRUE)){
ggsave(paste("./plots/figure_2c/y_dead/x_proportion_first_wave/figure_2c_",x,"_",y,".png",sep=''), plot = figure_2c_loop, width = 9,  height = 7)
} else {
ggsave(paste("./plots/figure_2c/y_dead/figure_2c_",x,"_",y,".png",sep=''), plot = figure_2c_loop, width = 9,  height = 7)
}
y = "EPI_DURATION_FIRST_WAVE"  # with linear axis
figure_2c_loop <- (ggplot(figure_2c_data, aes_string(x = x, y = y, colour = "CLASS"))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries)),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave")))
if (grepl('DAYS_TO_THRESHOLD', x, fixed=TRUE)){
ggsave(paste("./plots/figure_2c/y_duration/x_days_to_threshold/figure_2c_",x,"_",y,".png",sep=''), plot = figure_2c_loop, width = 9,  height = 7)
} else if (grepl('DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION', x, fixed=TRUE)){
ggsave(paste("./plots/figure_2c/y_duration/x_proportion_first_wave/figure_2c_",x,"_",y,".png",sep=''), plot = figure_2c_loop, width = 9,  height = 7)
} else {
ggsave(paste("./plots/figure_2c/y_duration/figure_2c_",x,"_",y,".png",sep=''), plot = figure_2c_loop, width = 9,  height = 7)
}
}
figure_2c <- (ggplot(figure_2c_data, aes(x = SI_DAYS_TO_THRESHOLD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
#+ geom_vline(xintercept=0,linetype="dashed", color=my_palette_2, size=1)
#+ annotate("text",x=2,y=490,hjust=0,label="T0",color=my_palette_2)
# Label countries that have high number of deaths, or early/late government response times
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries) |
#(EPI_DEAD_PER_10K >= quantile(figure_2c_data$EPI_DEAD_PER_10K, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD >= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD <= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(breaks=seq(-125,175,25),expand = c(0,0),limits = c(-125, 175))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from First Death to Stringency Index of 60 or Above)", y = "Total Deaths per 10,000 Population"))
ggsave("./plots/figure_2c.png", plot = figure_2c, width = 9,  height = 7)
for (mobility in mobilities)
{
figure_2b <- (ggplot(figure_2b_agg, aes_string(x = "t_1_dead", y = paste(mobility,".x",sep=""), colour = "CLASS"))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes_string(ymin=paste(mobility,".x-",mobility,".y",sep=""), ymax=paste(mobility,".x+",mobility,".y",sep=""), fill = "CLASS"), linetype=2, alpha=0.1, show.legend = FALSE)
#+ geom_vline(xintercept=0,linetype="dashed", color=my_palette_2, size=1)
#+ annotate("text",x=2,y=27,hjust=0,label="T0 (First Day Surpassing Cumulative 5 Cases per Million)",color=my_palette_2)
+ theme_light()
+ coord_cartesian(xlim=c(t_min, t_max))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(expand = c(0,0))
+ labs(title = paste("Average ",mobility," Mobility Over Time",sep=""), x = "Days Since First Recorded Death", y = paste(mobility," Mobility (Change from Baseline, Smoothed)",sep="")))
ggsave(paste("./plots/figure_2b_",mobility,".png",sep=''), plot = figure_2b, width = 9,  height = 7)
}
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_1_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
#+ geom_vline(xintercept=0,linetype="dashed", color=my_palette_2, size=1)
#+ annotate("text",x=2,y=97,hjust=0,label="T0 (First Day Surpassing Cumulative 5 Cases per Million)",color=my_palette_2)
+ theme_light()
+ coord_cartesian(xlim=c(t_min, t_max))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since First Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a.png", plot = figure_2a, width = 9,  height = 7)
figure_2_all <- grid.arrange(grobs=list(figure_2a,figure_2b,figure_2c),
widths = c(1.1, 1),
layout_matrix = rbind(c(1, 3),
c(2,  3)),
top = "Figure 2: Government and Public Response")
ggsave("./plots/figure_2.png", plot = figure_2_all, width = 15,  height = 8)
figure_2_all <- grid.arrange(grobs=list(figure_2a,figure_2b,figure_2c),
widths = c(1.1, 1),
layout_matrix = rbind(c(1, 3),
c(2,  3)))
figure_2_all <- annotate_figure(figure_2_all,
top = text_grob("Figure 2: Government and Public Response", size = 14))
figure_2_all
ggsave("./plots/figure_2.png", plot = figure_2_all, width = 15,  height = 8)
# Robustness check for T0 defined at 5 deaths
figure_2a_agg <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_5_dead),
FUN = mean,
na.action = na.pass)
figure_2a_agg <- plyr::rename(figure_2a_agg, c("Group.1"="CLASS", "Group.2"="t_5_dead","stringency_index"="mean_si"))
figure_2a_se <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_5_dead),
FUN = std.error)
figure_2a_se <- plyr::rename(figure_2a_se, c("Group.1"="CLASS", "Group.2"="t_5_dead","stringency_index"="se_si"))
figure_2a_agg <- merge(figure_2a_agg,figure_2a_se, by=c("CLASS","t_5_dead"))
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_5_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
#+ geom_vline(xintercept=0,linetype="dashed", color=my_palette_2, size=1)
#+ annotate("text",x=2,y=97,hjust=0,label="T0 (First Day Surpassing Cumulative 5 Cases per Million)",color=my_palette_2)
+ theme_light()
+ coord_cartesian(xlim=c(t_min, t_max))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since 5th Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_5_dead.png", plot = figure_2a, width = 9,  height = 7)
figure_2a_agg <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_1_dead),
FUN = mean,
na.action = na.pass)
figure_2a_agg <- plyr::rename(figure_2a_agg, c("Group.1"="CLASS", "Group.2"="t_1_dead","stringency_index"="mean_si"))
figure_2a_se <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_1_dead),
FUN = std.error)
figure_2a_se <- plyr::rename(figure_2a_se, c("Group.1"="CLASS", "Group.2"="t_1_dead","stringency_index"="se_si"))
figure_2a_agg <- merge(figure_2a_agg,figure_2a_se, by=c("CLASS","t_1_dead"))
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_1_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
+ theme_light()
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since 5th Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_t_1_dead.png", plot = figure_2a, width = 9,  height = 7)
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_1_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
+ theme_light()
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since First Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_t_1_dead.png", plot = figure_2a, width = 9,  height = 7)
figure_2a_agg <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_10_dead),
FUN = mean,
na.action = na.pass)
figure_2a_agg <- plyr::rename(figure_2a_agg, c("Group.1"="CLASS", "Group.2"="t_10_dead","stringency_index"="mean_si"))
figure_2a_se <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_10_dead),
FUN = std.error)
figure_2a_se <- plyr::rename(figure_2a_se, c("Group.1"="CLASS", "Group.2"="t_10_dead","stringency_index"="se_si"))
figure_2a_agg <- merge(figure_2a_agg,figure_2a_se, by=c("CLASS","t_10_dead"))
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_10_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
+ theme_light()
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since 10th Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_t_10_dead.png", plot = figure_2a, width = 9,  height = 7)
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_10_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
+ theme_light()
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(expand=c(0,0))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since 10th Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_t_10_dead.png", plot = figure_2a, width = 9,  height = 7)
figure_2a_agg <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_10_dead),
FUN = mean,
na.action = na.pass)
figure_2a_agg <- plyr::rename(figure_2a_agg, c("Group.1"="CLASS", "Group.2"="t_10_dead","stringency_index"="mean_si"))
figure_2a_se <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_10_dead),
FUN = std.error)
figure_2a_se <- plyr::rename(figure_2a_se, c("Group.1"="CLASS", "Group.2"="t_10_dead","stringency_index"="se_si"))
figure_2a_agg <- merge(figure_2a_agg,figure_2a_se, by=c("CLASS","t_10_dead"))
figure_2a_count <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_10_dead),
FUN = length)
figure_2a_count <- plyr::rename(figure_2a_count, c("Group.1"="CLASS", "Group.2"="t_10_dead","stringency_index"="n_present"))
figure_2a_count_max <- aggregate(figure_2a_count[c("n_present")],
by = list(figure_2a_count$CLASS),
FUN = max)
figure_2a_count_max <- plyr::rename(figure_2a_count_max, c("Group.1"="CLASS","n_present"="n_total"))
figure_2a_count <- merge(figure_2a_count,figure_2a_count_max, by="CLASS")
n_threshold = 0.75
figure_2a_count <- subset(figure_2a_count, n_present>=n_threshold*n_total)
t_min = min(figure_2a_count$t_10_dead)
t_max = max(figure_2a_count$t_10_dead)
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_10_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
+ theme_light()
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since 10th Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_t_10_dead.png", plot = figure_2a, width = 9,  height = 7)
figure_2a
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_10_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
+ theme_light()
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since 10th Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_t_10_dead.png", plot = figure_2a, width = 9,  height = 7)
figure_2a
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_10_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
+ theme_light()
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since 10th Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_t_10_dead.png", plot = figure_2a, width = 12,  height = 7)
# Robustness check for T0 defined at n deaths
figure_2a_agg <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_5_dead),
FUN = mean,
na.action = na.pass)
figure_2a_agg <- plyr::rename(figure_2a_agg, c("Group.1"="CLASS", "Group.2"="t_5_dead","stringency_index"="mean_si"))
figure_2a_se <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_5_dead),
FUN = std.error)
figure_2a_se <- plyr::rename(figure_2a_se, c("Group.1"="CLASS", "Group.2"="t_5_dead","stringency_index"="se_si"))
figure_2a_agg <- merge(figure_2a_agg,figure_2a_se, by=c("CLASS","t_5_dead"))
figure_2a_count <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_5_dead),
FUN = length)
figure_2a_count <- plyr::rename(figure_2a_count, c("Group.1"="CLASS", "Group.2"="t_5_dead","stringency_index"="n_present"))
figure_2a_count_max <- aggregate(figure_2a_count[c("n_present")],
by = list(figure_2a_count$CLASS),
FUN = max)
figure_2a_count_max <- plyr::rename(figure_2a_count_max, c("Group.1"="CLASS","n_present"="n_total"))
figure_2a_count <- merge(figure_2a_count,figure_2a_count_max, by="CLASS")
n_threshold = 0.75
figure_2a_count <- subset(figure_2a_count, n_present>=n_threshold*n_total)
t_min = min(figure_2a_count$t_5_dead)
t_max = max(figure_2a_count$t_5_dead)
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_5_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
+ theme_light()
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since 5th Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_t_5_dead.png", plot = figure_2a, width = 12,  height = 7)
figure_2a_agg <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_1_dead),
FUN = mean,
na.action = na.pass)
figure_2a_agg <- plyr::rename(figure_2a_agg, c("Group.1"="CLASS", "Group.2"="t_1_dead","stringency_index"="mean_si"))
figure_2a_se <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_1_dead),
FUN = std.error)
figure_2a_se <- plyr::rename(figure_2a_se, c("Group.1"="CLASS", "Group.2"="t_1_dead","stringency_index"="se_si"))
figure_2a_agg <- merge(figure_2a_agg,figure_2a_se, by=c("CLASS","t_1_dead"))
figure_2a_count <- aggregate(figure_2a_data[c("stringency_index")],
by = list(figure_2a_data$CLASS, figure_2a_data$t_1_dead),
FUN = length)
figure_2a_count <- plyr::rename(figure_2a_count, c("Group.1"="CLASS", "Group.2"="t_1_dead","stringency_index"="n_present"))
figure_2a_count_max <- aggregate(figure_2a_count[c("n_present")],
by = list(figure_2a_count$CLASS),
FUN = max)
figure_2a_count_max <- plyr::rename(figure_2a_count_max, c("Group.1"="CLASS","n_present"="n_total"))
figure_2a_count <- merge(figure_2a_count,figure_2a_count_max, by="CLASS")
n_threshold = 0.75
figure_2a_count <- subset(figure_2a_count, n_present>=n_threshold*n_total)
t_min = min(figure_2a_count$t_1_dead)
t_max = max(figure_2a_count$t_1_dead)
figure_2a <- (ggplot(figure_2a_agg, aes(x = t_1_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
+ theme_light()
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since 1st Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_2a_t_1_dead.png", plot = figure_2a, width = 12,  height = 7)
View(figure_2c_data)
figure_2c$T0_10_DEAD - figure_2c$T0_1_DEAD
figure_2c$T0_1_DEAD
figure_2c_data$T0_10_DEAD - figure_2c_data$T0_1_DEAD
figure_2c_data$SI_DAYS_TO_THRESHOLD_10_DEAD <- figure_2c_data$SI_DAYS_TO_THRESHOLD - (figure_2c_data$T0_10_DEAD - figure_2c_data$T0_1_DEAD)
figure_2c <- (ggplot(figure_2c_data, aes(x = SI_DAYS_TO_THRESHOLD_10_DEAD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries) |
#(EPI_DEAD_PER_10K >= quantile(figure_2c_data$EPI_DEAD_PER_10K, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD_10_DEAD >= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD_10_DEAD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD_10_DEAD <= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD_10_DEAD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(breaks=seq(-125,175,25),expand = c(0,0),limits = c(-125, 175))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from 10th Death to Stringency Index of 60 or Above)", y = "Total Deaths per 10,000 Population"))
ggsave("./plots/figure_2c_t_10_dead.png", plot = figure_2c, width = 9,  height = 7)
figure_2c
figure_2c <- (ggplot(figure_2c_data, aes(x = SI_DAYS_TO_THRESHOLD_10_DEAD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries) |
#(EPI_DEAD_PER_10K >= quantile(figure_2c_data$EPI_DEAD_PER_10K, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD_10_DEAD >= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD_10_DEAD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD_10_DEAD <= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD_10_DEAD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous()
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from 10th Death to Stringency Index of 60 or Above)", y = "Total Deaths per 10,000 Population"))
figure_2c
figure_2c <- (ggplot(figure_2c_data, aes(x = SI_DAYS_TO_THRESHOLD_10_DEAD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries) |
#(EPI_DEAD_PER_10K >= quantile(figure_2c_data$EPI_DEAD_PER_10K, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD_10_DEAD >= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD_10_DEAD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD_10_DEAD <= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD_10_DEAD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(breaks=seq(-175,150,25),expand = c(0,0),limits = c(-175, 150))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from 10th Death to Stringency Index of 60 or Above)", y = "Total Deaths per 10,000 Population"))
ggsave("./plots/figure_2c_t_10_dead.png", plot = figure_2c, width = 9,  height = 7)
figure_2c_data$SI_DAYS_TO_THRESHOLD_5_DEAD <- figure_2c_data$SI_DAYS_TO_THRESHOLD - (figure_2c_data$T0_5_DEAD - figure_2c_data$T0_1_DEAD)
figure_2c <- (ggplot(figure_2c_data, aes(x = SI_DAYS_TO_THRESHOLD_5_DEAD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries) |
(SI_DAYS_TO_THRESHOLD >= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD <= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(breaks=seq(-175,150,25),expand = c(0,0),limits = c(-175, 150))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from 5th Death to Stringency Index of 60 or Above)", y = "Total Deaths per 10,000 Population"))
ggsave("./plots/figure_2c_t_5_dead.png", plot = figure_2c, width = 9,  height = 7)
figure_2c
figure_2c <- (ggplot(figure_2c_data, aes(x = SI_DAYS_TO_THRESHOLD_5_DEAD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries) |
(SI_DAYS_TO_THRESHOLD >= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD <= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(breaks=seq(-175,175,25),expand = c(0,0),limits = c(-175, 175))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from 5th Death to Stringency Index of 60 or Above)", y = "Total Deaths per 10,000 Population"))
ggsave("./plots/figure_2c_t_5_dead.png", plot = figure_2c, width = 9,  height = 7)
figure_2c <- (ggplot(figure_2c_data, aes(x = SI_DAYS_TO_THRESHOLD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries) |
(SI_DAYS_TO_THRESHOLD >= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD <= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(breaks=seq(-175,175,25),expand = c(0,0),limits = c(-175, 175))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from 1st Death to Stringency Index of 60 or Above)", y = "Total Deaths per 10,000 Population"))
ggsave("./plots/figure_2c_t_1_dead.png", plot = figure_2c, width = 9,  height = 7)
figure_2c <- (ggplot(figure_2c_data, aes(x = SI_DAYS_TO_THRESHOLD_5_DEAD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries) |
(SI_DAYS_TO_THRESHOLD >= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD <= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(breaks=seq(-175,175,25),expand = c(0,0),limits = c(-175, 175))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from 5th Death to Stringency Index of 60 or Above)", y = "Total Deaths per 10,000 Population"))
ggsave("./plots/figure_2c_t_5_dead.png", plot = figure_2c, width = 9,  height = 7)
figure_2c <- (ggplot(figure_2c_data, aes(x = SI_DAYS_TO_THRESHOLD_10_DEAD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_2c_data,
(COUNTRYCODE %in% label_countries) |
(SI_DAYS_TO_THRESHOLD >= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD <= quantile(figure_2c_data$SI_DAYS_TO_THRESHOLD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.8, 0.2))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(breaks=seq(-175,175,25),expand = c(0,0),limits = c(-175, 175))
+ scale_y_continuous(trans='log10', breaks = log_breaks(n=10,base=10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from 10th Death to Stringency Index of 60 or Above)", y = "Total Deaths per 10,000 Population"))
ggsave("./plots/figure_2c_t_10_dead.png", plot = figure_2c, width = 9,  height = 7)
View(figure_2a_se)
