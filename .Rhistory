+ labs(title=country_a, y="New Cases per Day", x=element_blank())
+ theme_light()
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_a_2 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(y="Deaths per Day",x=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_a=max(subset(figure_2_data,country==country_a)$new_tests,na.rm=TRUE)
max_positive_rate_a=max(subset(figure_2_data,country==country_a)$positive_rate,na.rm=TRUE)
figure_2_a_3 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_a/max_positive_rate_a)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = "Tests per Day",
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_a/max_positive_rate_a), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_b_1 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_b,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_b_2 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_b=max(subset(figure_2_data,country==country_b)$new_tests,na.rm=TRUE)
max_positive_rate_b=max(subset(figure_2_data,country==country_b)$positive_rate,na.rm=TRUE)
figure_2_b_3 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_b/max_positive_rate_b)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_b/max_positive_rate_b), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_c_1 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_c,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_c_2 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_c=max(subset(figure_2_data,country==country_c)$new_tests,na.rm=TRUE)
max_positive_rate_c=max(subset(figure_2_data,country==country_c)$positive_rate,na.rm=TRUE)
figure_2_c_3 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_c/max_positive_rate_c)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_c/max_positive_rate_c), name = "Positive Rate"))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
# Combining subplots
figure_2_all <- egg::ggarrange(figure_2_a_1,figure_2_b_1,figure_2_c_1,
figure_2_a_2,figure_2_b_2,figure_2_c_2,
figure_2_a_3,figure_2_b_3,figure_2_c_3)
figure_2_all <- annotate_figure(figure_2_all,
top = text_grob("Figure 2: Cases, Deaths and Testing Over Time", size = 14))
ggsave("./plots/figure_2.png", plot = figure_2_all, width = 12,  height = 8)
my_palette_1 <- brewer.pal(name="YlGnBu",n=4)[2]
my_palette_2 <- brewer.pal(name="YlGnBu",n=4)[4]
my_palette_3 <- brewer.pal(name="Oranges",n=4)[4]
# Cut the positive rate before April due to low denominator
figure_2_data[figure_2_data$date<'2020-04-01','positive_rate'] <- NA
# Individual subplots
figure_2_a_1 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_a, y="New Cases per Day", x=element_blank())
+ theme_light()
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_a_2 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(y="Deaths per Day",x=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_a=max(subset(figure_2_data,country==country_a)$new_tests,na.rm=TRUE)
max_positive_rate_a=max(subset(figure_2_data,country==country_a)$positive_rate,na.rm=TRUE)
figure_2_a_3 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_a/max_positive_rate_a)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = "Tests per Day",
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_a/max_positive_rate_a), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_b_1 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_b,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_b_2 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_b=max(subset(figure_2_data,country==country_b)$new_tests,na.rm=TRUE)
max_positive_rate_b=max(subset(figure_2_data,country==country_b)$positive_rate,na.rm=TRUE)
figure_2_b_3 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_b/max_positive_rate_b)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_b/max_positive_rate_b), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_c_1 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_c,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_c_2 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_c=max(subset(figure_2_data,country==country_c)$new_tests,na.rm=TRUE)
max_positive_rate_c=max(subset(figure_2_data,country==country_c)$positive_rate,na.rm=TRUE)
figure_2_c_3 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_c/max_positive_rate_c)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_c/max_positive_rate_c), name = "Positive Rate"))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
# Combining subplots
figure_2_all <- egg::ggarrange(figure_2_a_1,figure_2_b_1,figure_2_c_1,
figure_2_a_2,figure_2_b_2,figure_2_c_2,
figure_2_a_3,figure_2_b_3,figure_2_c_3)
figure_2_all <- annotate_figure(figure_2_all,
top = text_grob("Figure 2: Cases, Deaths and Testing Over Time", size = 14))
ggsave("./plots/figure_2.png", plot = figure_2_all, width = 12,  height = 8)
figure_2_all
View(figure_3c_data)
country_d = "Zambia"
# Set up colour palette
my_palette_1 <- brewer.pal(name="YlGnBu",n=4)[2]
my_palette_2 <- brewer.pal(name="YlGnBu",n=4)[4]
my_palette_3 <- brewer.pal(name="Oranges",n=4)[4]
# Cut the positive rate before April due to low denominator
figure_2_data[figure_2_data$date<'2020-04-01','positive_rate'] <- NA
# Individual subplots
figure_2_a_1 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_a, y="New Cases per Day", x=element_blank())
+ theme_light()
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_a_2 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(y="Deaths per Day",x=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_a=max(subset(figure_2_data,country==country_a)$new_tests,na.rm=TRUE)
max_positive_rate_a=max(subset(figure_2_data,country==country_a)$positive_rate,na.rm=TRUE)
figure_2_a_3 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_a/max_positive_rate_a)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = "Tests per Day",
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_a/max_positive_rate_a), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_b_1 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_b,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_b_2 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_b=max(subset(figure_2_data,country==country_b)$new_tests,na.rm=TRUE)
max_positive_rate_b=max(subset(figure_2_data,country==country_b)$positive_rate,na.rm=TRUE)
figure_2_b_3 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_b/max_positive_rate_b)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_b/max_positive_rate_b), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_c_1 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_c,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_c_2 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_c=max(subset(figure_2_data,country==country_c)$new_tests,na.rm=TRUE)
max_positive_rate_c=max(subset(figure_2_data,country==country_c)$positive_rate,na.rm=TRUE)
figure_2_c_3 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_c/max_positive_rate_c)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_c/max_positive_rate_c), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_d_1 <- (ggplot(subset(figure_2_data,country==country_d))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_d,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_d_2 <- (ggplot(subset(figure_2_data,country==country_d))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_c=max(subset(figure_2_data,country==country_d)$new_tests,na.rm=TRUE)
max_positive_rate_c=max(subset(figure_2_data,country==country_d)$positive_rate,na.rm=TRUE)
figure_2_d_3 <- (ggplot(subset(figure_2_data,country==country_d))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smoothed),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate*(max_tests_c/max_positive_rate_c)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_c/max_positive_rate_c), name = "Positive Rate"))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
# Combining subplots
figure_2_all <- egg::ggarrange(figure_2_a_1,figure_2_b_1,figure_2_c_1,figure_2_d_1,
figure_2_a_2,figure_2_b_2,figure_2_c_2,figure_2_d_2,
figure_2_a_3,figure_2_b_3,figure_2_c_3,figure_2_d_3)
figure_2_all <- annotate_figure(figure_2_all,
top = text_grob("Figure 2: Cases, Deaths and Testing Over Time", size = 14))
ggsave("./plots/figure_2.png", plot = figure_2_all, width = 12,  height = 8)
# Combining subplots
figure_2_all <- egg::ggarrange(figure_2_a_1,figure_2_b_1,figure_2_c_1,figure_2_d_1,
figure_2_a_2,figure_2_b_2,figure_2_c_2,figure_2_d_2,
figure_2_a_3,figure_2_b_3,figure_2_c_3,figure_2_d_3,
ncol=4)
figure_2_all <- annotate_figure(figure_2_all,
top = text_grob("Figure 2: Cases, Deaths and Testing Over Time", size = 14))
ggsave("./plots/figure_2.png", plot = figure_2_all, width = 16,  height = 8)
# Import csv file for Figure 3c
figure_3c_data <- read_csv("./data/figure_3c.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3c_data$COUNTRYCODE = as.factor(figure_3c_data$COUNTRYCODE)
figure_3c_data$COUNTRY = as.factor(figure_3c_data$COUNTRY)
figure_3c_data$CLASS = as.factor(figure_3c_data$CLASS)
figure_3c_data$CLASS_COARSE = as.factor(figure_3c_data$CLASS_COARSE)
# Import csv file for Figure 3a
figure_3a_data <- readr::read_csv("./data/figure_3a.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3a_data$COUNTRYCODE = as.factor(figure_3a_data$COUNTRYCODE)
figure_3a_data$COUNTRY = as.factor(figure_3a_data$COUNTRY)
figure_3a_data$CLASS = as.factor(figure_3a_data$CLASS)
# Import csv file for Figure 3b
figure_3b_data <- read_csv("./data/figure_3b.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3b_data$COUNTRYCODE = as.factor(figure_3b_data$COUNTRYCODE)
figure_3b_data$COUNTRY = as.factor(figure_3b_data$COUNTRY)
figure_3b_data$CLASS = as.factor(figure_3b_data$CLASS)
# Import csv file for Figure 3c
figure_3c_data <- read_csv("./data/figure_3c.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3c_data$COUNTRYCODE = as.factor(figure_3c_data$COUNTRYCODE)
figure_3c_data$COUNTRY = as.factor(figure_3c_data$COUNTRY)
figure_3c_data$CLASS = as.factor(figure_3c_data$CLASS)
figure_3c_data$CLASS_COARSE = as.factor(figure_3c_data$CLASS_COARSE)
# Remove Others class from data. Only keep classes 1-4 for now, 5 has low sample size
figure_3a_data <- subset(figure_3a_data,CLASS%in%c(1,2,3,4))
figure_3b_data <- subset(figure_3b_data,CLASS%in%c(1,2,3,4))
figure_3b_data <- subset(figure_3b_data,COUNTRY!='Guinea-Bissau')
figure_3c_data <- subset(figure_3c_data,CLASS%in%c(1,2,3,4))
# Aggregate data by class and t_1_dead, mean mean and sd for each date
# Figure 3 mean and standard errors
figure_3a_agg <- aggregate(figure_3a_data[c("stringency_index")],
by = list(figure_3a_data$CLASS, figure_3a_data$t_1_dead),
FUN = mean,
na.action = na.pass)
figure_3a_agg <- plyr::rename(figure_3a_agg, c("Group.1"="CLASS", "Group.2"="t_1_dead","stringency_index"="mean_si"))
figure_3a_se <- aggregate(figure_3a_data[c("stringency_index")],
by = list(figure_3a_data$CLASS, figure_3a_data$t_1_dead),
FUN = std.error)
figure_3a_se <- plyr::rename(figure_3a_se, c("Group.1"="CLASS", "Group.2"="t_1_dead","stringency_index"="se_si"))
figure_3a_agg <- merge(figure_3a_agg,figure_3a_se, by=c("CLASS","t_1_dead"))
# Define list of mobility variables
mobilities = c("workplace", "transit_stations", "retail_recreation", "residential")
# Figure 3 mean and standard errors
figure_3b_agg <- aggregate(figure_3b_data[mobilities],
by = list(figure_3b_data$CLASS, figure_3b_data$t_1_dead),
FUN = mean)
figure_3b_agg <- plyr::rename(figure_3b_agg, c("Group.1"="CLASS", "Group.2"="t_1_dead"))
figure_3b_se <- aggregate(figure_3b_data[mobilities],
by = list(figure_3b_data$CLASS, figure_3b_data$t_1_dead),
FUN = std.error)
figure_3b_se <- plyr::rename(figure_3b_se, c("Group.1"="CLASS", "Group.2"="t_1_dead"))
figure_3b_agg <- merge(figure_3b_agg,figure_3b_se, by=c("CLASS","t_1_dead"))
# Get the number of elements in each class to work out the t_1_dead xlim values
figure_3a_count <- aggregate(figure_3a_data[c("stringency_index")],
by = list(figure_3a_data$CLASS, figure_3a_data$t_1_dead),
FUN = length)
figure_3a_count <- plyr::rename(figure_3a_count, c("Group.1"="CLASS", "Group.2"="t_1_dead","stringency_index"="n_present"))
figure_3a_count_max <- aggregate(figure_3a_count[c("n_present")],
by = list(figure_3a_count$CLASS),
FUN = max)
figure_3a_count_max <- plyr::rename(figure_3a_count_max, c("Group.1"="CLASS","n_present"="n_total"))
figure_3a_count <- merge(figure_3a_count,figure_3a_count_max, by="CLASS")
figure_3b_count <- aggregate(figure_3b_data[c("residential")],
by = list(figure_3b_data$CLASS, figure_3b_data$t_1_dead),
FUN = length)
figure_3b_count <- plyr::rename(figure_3b_count, c("Group.1"="CLASS", "Group.2"="t_1_dead","residential"="n_present"))
figure_3b_count_max <- aggregate(figure_3b_count[c("n_present")],
by = list(figure_3b_count$CLASS),
FUN = max)
figure_3b_count_max <- plyr::rename(figure_3b_count_max, c("Group.1"="CLASS","n_present"="n_total"))
figure_3b_count <- merge(figure_3b_count,figure_3b_count_max, by="CLASS")
# n_threshold determines where to cut off t_1_dead xlim values. Only takes t_1_dead values for which there are >= n_threshold % of the total present for each class
n_threshold = 0.8
figure_3a_count <- subset(figure_3a_count, n_present>=n_threshold*n_total)
figure_3b_count <- subset(figure_3b_count, n_present>=n_threshold*n_total)
t_min = min(figure_3a_count$t_1_dead, figure_3b_count$t_1_dead)
t_max = max(figure_3a_count$t_1_dead, figure_3b_count$t_1_dead)
# Calculate duration flags raised in first wave for Figure 3
flags = c("SI",
"C1_SCHOOL_CLOSING",
"C2_WORKPLACE_CLOSING",
"C3_CANCEL_PUBLIC_EVENTS",
"C4_RESTRICTIONS_ON_GATHERINGS",
"C5_CLOSE_PUBLIC_TRANSPORT",
"C6_STAY_AT_HOME_REQUIREMENTS",
"C7_RESTRICTIONS_ON_INTERNAL_MOVEMENT",
"C8_INTERNATIONAL_TRAVEL_CONTROLS",
"H2_TESTING_POLICY",
"H3_CONTACT_TRACING")
for (flag in flags){
figure_3c_data[,paste(flag,"_DAYS_ABOVE_THRESHOLD_FIRST_WAVE_PROPORTION",sep="")] <- figure_3c_data[,paste(flag,"_DAYS_ABOVE_THRESHOLD_FIRST_WAVE",sep="")]/figure_3c_data[,"EPI_DURATION_FIRST_WAVE"]
}
# Plot Figure 3 ------------------------------------------------------------
# Set up colour palette
my_palette_1 <- brewer.pal(name="PuOr",n=5)[c(1,2,4,5)]
my_palette_2 <- brewer.pal(name="Oranges",n=4)[4]
# # Figure 3: Line plot of stringency index over time for each country class
# figure_3a_loess <- (ggplot(figure_3a_data, aes(x = t_1_dead, y = stringency_index, colour = CLASS))
#               #+ geom_line(aes(group=interaction(CLASS,COUNTRY),color=CLASS), size=0.1, alpha = 0.3,na.rm=TRUE)
#               + geom_smooth(method="loess", level=0.95, span=0.3, na.rm=TRUE)
#               + geom_vline(xintercept=0,linetype="dashed", color=my_palette_2, size=1)
#               + annotate("text",x=2,y=97,hjust=0,label="T0 (First Day Surpassing Cumulative 5 Cases per Million)",color=my_palette_2)
#               + theme_light()
#               + coord_cartesian(xlim=c(t_min, t_max))
#               + scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
#               + theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
#               + scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
#               + scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
#               + labs(title = "Average Stringency Index Over Time", x = "Days Since T0", y = "Stringency Index"))
# ggsave("./plots/figure_3a_loess.png", plot = figure_3a_loess, width = 9,  height = 7)
figure_3a <- (ggplot(figure_3a_agg, aes(x = t_1_dead, y = mean_si, colour = CLASS))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes(ymin=mean_si-se_si, ymax=mean_si+se_si, fill = CLASS), linetype=2, alpha=0.1, show.legend = FALSE)
#+ geom_vline(xintercept=0,linetype="dashed", color=my_palette_2, size=1)
#+ annotate("text",x=2,y=97,hjust=0,label="T0 (First Day Surpassing Cumulative 5 Cases per Million)",color=my_palette_2)
+ theme_light()
+ coord_cartesian(xlim=c(t_min, t_max))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(breaks=seq(0,100,10),expand = c(0,0),limits = c(0, 100))
+ labs(title = "Average Stringency Index Over Time", x = "Days Since First Recorded Death", y = "Stringency Index"))
ggsave("./plots/figure_3a.png", plot = figure_3a, width = 9,  height = 7)
# Figure 3: Line plot of residential mobility over time for each country class
# Figure 3 for each mobility with loess smoothing
# for (mobility in mobilities)
# {
#   figure_3b_loess <- (ggplot(figure_3b_data, aes_string(x = "t_1_dead", y = mobility, colour = "CLASS"))
#                       + geom_smooth(method="loess", level=0.95, span=0.3, na.rm=TRUE, show.legend=FALSE)
#                       + geom_vline(xintercept=0,linetype="dashed", color=my_palette_2, size=1)
#                       #+ annotate("text",x=2,y=27,hjust=0,label="T0 (First Day Surpassing Cumulative 5 Cases per Million)",color=my_palette_2)
#                       + theme_light()
#                       + coord_cartesian(xlim=c(t_min, t_max))
#                       + scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
#                       + theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
#                       + scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
#                       + scale_y_continuous(expand = c(0,0))
#                       + labs(title = paste("Average ",mobility," Mobility Over Time",sep=""), x = "Days Since T0", y = paste(mobility," Mobility (Change from Baseline, Smoothed)",sep="")))
#   ggsave(paste("./plots/figure_3b_loess_",mobility,".png",sep=''), plot = figure_3b_loess, width = 9,  height = 7)
# }
# Figure 3 for each mobility with mean and sd
for (mobility in mobilities)
{
figure_3b <- (ggplot(figure_3b_agg, aes_string(x = "t_1_dead", y = paste(mobility,".x",sep=""), colour = "CLASS"))
+ geom_line(size=1,show.legend = FALSE,na.rm=TRUE)
+ geom_ribbon(aes_string(ymin=paste(mobility,".x-",mobility,".y",sep=""), ymax=paste(mobility,".x+",mobility,".y",sep=""), fill = "CLASS"), linetype=2, alpha=0.1, show.legend = FALSE)
#+ geom_vline(xintercept=0,linetype="dashed", color=my_palette_2, size=1)
#+ annotate("text",x=2,y=27,hjust=0,label="T0 (First Day Surpassing Cumulative 5 Cases per Million)",color=my_palette_2)
+ theme_light()
+ coord_cartesian(xlim=c(t_min, t_max))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7))
+ scale_x_continuous(breaks=seq(floor(t_min/10)*10,ceiling(t_max/10)*10,10),expand=c(0,0),limits=c(t_min,t_max))
+ scale_y_continuous(expand = c(0,0))
+ labs(title = paste("Average ",mobility," Mobility Over Time",sep=""), x = "Days Since First Recorded Death", y = paste(mobility," Mobility (Change from Baseline, Smoothed)",sep="")))
ggsave(paste("./plots/figure_3b_",mobility,".png",sep=''), plot = figure_3b, width = 9,  height = 7)
}
# Figure 3: Scatter plot of government response time against number of cases for each country
figure_3c <- (ggplot(figure_3c_data, aes(x = SI_DAYS_TO_THRESHOLD, y = EPI_DEAD_PER_10K, colour = CLASS))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
#+ geom_vline(xintercept=0,linetype="dashed", color=my_palette_2, size=1)
#+ annotate("text",x=2,y=490,hjust=0,label="T0",color=my_palette_2)
# Label countries that have high number of deaths, or early/late government response times
+ geom_text(data=subset(figure_3c_data,
(COUNTRYCODE %in% label_countries) |
#(EPI_DEAD_PER_10K >= quantile(figure_3c_data$EPI_DEAD_PER_10K, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD >= quantile(figure_3c_data$SI_DAYS_TO_THRESHOLD, 0.95,na.rm=TRUE)) |
(SI_DAYS_TO_THRESHOLD <= quantile(figure_3c_data$SI_DAYS_TO_THRESHOLD, 0.05,na.rm=TRUE))),
aes(label=COUNTRY),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_color_manual(values = my_palette_1, name = "Epidemic Wave State", labels = c("Entering First Wave", "Past First Wave", "Entering Second Wave","Past Second Wave"))
+ scale_x_continuous(trans=pseudolog10_trans, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30,100,200), expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.01,0.1,1,10), labels=c(0.001,0.01,0.1,1,10))
+ labs(title = "Total Deaths Against Government Response Time", x = "Government Response Time (Days from First Death to Stringency Index of 59 or Above)", y = "Total Deaths per 10,000 Population"))
ggsave("./plots/figure_3c.png", plot = figure_3c, width = 9,  height = 7)
# Kendall's rank correlation test: p-value of 0.00375
# Spearman's rank correlation test: p-value of 0.0001524
cor.test(figure_3c_data$SI_DAYS_TO_THRESHOLD, figure_3c_data$EPI_DEAD_PER_10K,
alternative = "greater",
method = "kendall")
# Combine figure_3a, 2b, 2c
figure_3_all <- grid.arrange(grobs=list(figure_3a,figure_3b,figure_3c),
widths = c(1.1, 1),
layout_matrix = rbind(c(1, 3),
c(2,  3)))
figure_3_all <- annotate_figure(figure_3_all,
top = text_grob("Figure 3: Government and Public Response", size = 14))
ggsave("./plots/figure_3.png", plot = figure_3_all, width = 15,  height = 8)
cor.test(figure_3c_data$SI_DAYS_TO_THRESHOLD, figure_3c_data$EPI_DEAD_PER_10K,
alternative = "greater",
method = "spearman")
cor.test(figure_3c_data$SI_DAYS_TO_THRESHOLD, figure_3c_data$EPI_DEAD_PER_10K,
alternative = "greater",
method = "kendall")
