plot(cars)
plot(cars)
plot(cars)
setwd("~/GitHub/tarunsrivastava145/epidemetrics")
# load packages
package_list <- c("readr","ggplot2","gridExtra","plyr","dplyr","ggsci","RColorBrewer",
"viridis","sf","reshape2","ggpubr","egg","scales","plotrix","ggallin", "stats")
for (package in package_list){
if (!package %in% installed.packages()){
install.packages(package)
}
}
lapply(package_list, require, character.only = TRUE)
# clear workspace
rm(list=ls())
# Import csv file for Figure 3a
figure_3a_data <- read_csv("./data/figure_3a.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3a_data$countrycode = as.factor(figure_3a_data$countrycode)
figure_3a_data$country = as.factor(figure_3a_data$country)
figure_3a_data$class = as.factor(figure_3a_data$class)
# Import csv file for Figure 3b
figure_3b_data <- read_csv("./data/figure_3b.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3b_data$COUNTRYCODE = as.factor(figure_3b_data$COUNTRYCODE)
figure_3b_data$COUNTRY = as.factor(figure_3b_data$COUNTRY)
figure_3b_data$CLASS = as.factor(figure_3b_data$CLASS)
figure_3b_data$CLASS_COARSE = as.factor(figure_3b_data$CLASS_COARSE)
# Import csv file for Figure 3b at the wave level
figure_3b_wave_data <- read_csv("./data/figure_3b_wave_level.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3b_wave_data$countrycode = as.factor(figure_3b_wave_data$countrycode)
figure_3b_wave_data$country = as.factor(figure_3b_wave_data$country)
figure_3b_wave_data$class = as.factor(figure_3b_wave_data$class)
figure_3b_wave_data$wave = as.factor(figure_3b_wave_data$wave)
# Import csv file for Figure 3c at the wave level
figure_3c_1_data <- read_csv("./data/figure_3c_1.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3c_1_data$countrycode = as.factor(figure_3c_1_data$countrycode)
figure_3c_1_data$country = as.factor(figure_3c_1_data$country)
figure_3c_1_data$class = as.factor(figure_3c_1_data$class)
figure_3c_1_data$wave = as.factor(figure_3c_1_data$wave)
# Import csv file for Figure 3c testing data
figure_3c_2_data <- read_csv("./data/figure_3c_2.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3c_2_data$countrycode = as.factor(figure_3c_2_data$countrycode)
# Countries to label in scatterplot --------------------------------------
label_countries <- c("USA","GBR","ESP","BRA","JAP","IND","ZAF","BEL","AUS")
# Reorder factor levels
figure_3a_data$class_coarse <- factor(figure_3a_data$class_coarse, levels=c("EPI_FIRST_WAVE","EPI_SECOND_WAVE","EPI_THIRD_WAVE","EPI_OTHER"))
# Process data for 3b: remove all second wave observations
figure_3b_wave_1_data <- subset(figure_3b_wave_data,wave==1)
figure_3b_wave_1_data <- subset(figure_3b_wave_1_data,country!="Qatar") # Qatar is badly classified
# Calculate response time as date to reach threshold - date of T0
figure_3b_wave_1_data$response_time <- figure_3b_wave_1_data$first_date_c1_above_threshold - figure_3b_wave_1_data$t0_10_dead
figure_3b_wave_1_data$response_time = as.numeric(figure_3b_wave_1_data$response_time)
# Remove any where the date SI reaches threshold is no longer during the first wave
figure_3b_wave_1_data <- subset(figure_3b_wave_1_data,first_date_si_above_threshold<wave_end)
# Remove very small countries as their T0 are skewed
figure_3b_wave_1_data <- subset(figure_3b_wave_1_data,population>=2500000)
figure_3b_wave_data$dead_during_wave_per_10k <- figure_3b_wave_data$dead_during_wave * 10000 / figure_3b_wave_data$population
figure_3b_wave_1_data$dead_during_wave_per_10k <- figure_3b_wave_1_data$dead_during_wave * 10000 / figure_3b_wave_1_data$population
corr <- cor.test(figure_3a_data$si_integral, figure_3a_data$last_dead_per_10k,
method = "kendall")
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",corr$estimate," \np-value: ",corr$p.value,sep="")
corr_text
if (corr$p.value<0.0001) {"<0.0001"} else if (corr$p.value<0.001) {"<0.001"} else {signif(corr$p.value,3)}
corr$p.value
# Figure 3: Scatter plot of government response time against number of cases for each country
corr <- cor.test(figure_3a_data$si_integral, figure_3a_data$last_dead_per_10k,
method = "kendall")
p_value_str = if (corr$p.value<0.0001) {"<0.0001"} else if (corr$p.value<0.001) {"<0.001"} else {signif(corr$p.value,3)}
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",
signif(corr$estimate,3)," \np-value: ",p_value_str,sep="")
corr_text
figure_3a <- (ggplot(figure_3a_data, aes(x = si_integral, y = last_dead_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3a_data,
(countrycode %in% label_countries) |
#(last_dead_per_10k >= quantile(figure_3a_data$last_dead_per_10k, 0.95,na.rm=TRUE)) |
(si_integral >= quantile(figure_3a_data$si_integral, 0.95,na.rm=TRUE)) |
(si_integral <= quantile(figure_3a_data$si_integral, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=3000,y=10,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.85, 0.15))
#+ scale_color_discrete(name = "Wave Status", labels = c("First Wave", "Second Wave","Third Wave","Other"))
+ scale_x_continuous(expand=expand_scale(mult=c(0.05,0.1)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10), labels=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10))
+ labs(title = "Total Deaths Against Integral of Stringency Index", x = "Integral Under Stringency Index Curve to Date", y = "Total Deaths to Date per 10,000 Population"))
figure_3a
ggsave("./plots/figure_3a.png", plot = figure_3a, width = 9,  height = 7)
corr <- cor.test(figure_3b_wave_1_data$dead_during_wave_per_10k, figure_3b_wave_1_data$response_time,
method = "kendall")
p_value_str = if (corr$p.value<0.0001) {"<0.0001"} else if (corr$p.value<0.001) {"<0.001"} else {signif(corr$p.value,3)}
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",signif(corr$estimate,3)," \np-value: ",p_value_str,sep="")
corr_text
figure_3b_wave_1 <- (ggplot(figure_3b_wave_1_data, aes(x = response_time, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3b_wave_1_data,
(countrycode %in% label_countries) |
(response_time >= quantile(figure_3b_wave_1_data$response_time, 0.8,na.rm=TRUE)) |
(response_time <= quantile(figure_3b_wave_1_data$response_time, 0.02,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=1,y=0.01,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
#+ scale_color_manual(values = my_palette_1, name = "Wave", labels = c("First Wave", "Second Wave"))
+ scale_x_continuous(trans=pseudolog10_trans, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30), expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = "Total Deaths During First Wave Against Government Response Time", x = "Government Response Time (Days from 10th Death to Schools Closing)", y = "Total Deaths During First Wave per 10,000 Population"))
figure_3b_wave_1
ggsave("./plots/figure_3b_wave_1.png", plot = figure_3b_wave_1, width = 9,  height = 7)
figure_3c_wave_1_data <- subset(figure_3c_1_data,wave==1)
figure_3c_wave_1_data <- subset(figure_3c_wave_1_data,country!="Qatar") # Qatar is badly classified
# Remove very small countries as their T0 are skewed
figure_3c_wave_1_data <- subset(figure_3c_wave_1_data,population>=2500000)
# Add column for tests per population
figure_3c_2_data <- merge(figure_3c_2_data, figure_3c_wave_1_data[c('countrycode','population')], by='countrycode')
# Get per population values
figure_3c_wave_1_data$dead_during_wave_per_10k <- figure_3c_wave_1_data$dead_during_wave * 10000 / figure_3c_wave_1_data$population
figure_3c_2_data$tests_per_10k <- figure_3c_2_data$tests * 10000 / figure_3c_2_data$population
lags <- data.frame(lag=NULL,tau_estimate=NULL,p_value=NULL)
for (lag in seq(-50,100,by=1)){
if (lag < 0){plus_minus='Minus'} else {plus_minus='Plus'}
figure_3c_wave_1_data$date <- figure_3c_wave_1_data$t0_10_dead + lag
plot_data <- merge(figure_3c_wave_1_data, figure_3c_2_data, by=c("countrycode","date"))
plot_data <- subset(plot_data, date<wave_end) # Remove if lagged date is after the end of the first wave
corr <- cor.test(plot_data$dead_during_wave_per_10k, plot_data$tests_per_10k,
method = "kendall")
p_value_str = if (corr$p.value<0.0001) {"<0.0001"} else if (corr$p.value<0.001) {"<0.001"} else {signif(corr$p.value,3)}
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",signif(corr$estimate,3)," \np-value: ",p_value_str,sep="")
my_list <- list(lag = lag, tau_estimate = corr$estimate, p_value=corr$p.value)
lags <- bind_rows(lags, my_list)
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(plot_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.85,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.15,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=0.02,y=0.02,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Total Deaths During First Wave Against  Early Testing (Tests Done Up Until the Date of the 10th Death",plus_minus,abs(lag),"Days",sep=" "),
x = paste("Total Tests Up Until the Date of the 10th Death",plus_minus,abs(lag),"Days, per 10,000 Population",sep=" "),
y = "Total Deaths During First Wave, per 10,000 Population"))
figure_3c
ggsave(paste("./plots/figure_3c_test_lags/figure_3c_",plus_minus,abs(lag),".png",sep=""), plot = figure_3c, width = 9,  height = 7)
}
# Plot figure 4: USA Choropleth ---------------------------------------------------------------
# Import Data for figure 4 -------------------------------------------------------------------
# Import csv file for figure 4: Time series and choropleth for USA
figure_4a_data <- read_csv(file="./data/figure_4a.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_4a_data$countrycode <- as.factor(figure_4a_data$countrycode)
figure_4a_data$adm_area_1 <- as.factor(figure_4a_data$adm_area_1)
# Get top n states by total confirmed cases, group others into Others
figure_4a_max <- aggregate(figure_4a_data[c("confirmed")],
by = list(figure_4a_data$adm_area_1),
FUN = max,
na.rm=TRUE)
figure_4a_max <- plyr::rename(figure_4a_max, c("Group.1"="adm_area_1"))
figure_4a_max <- figure_4a_max[order(-figure_4a_max$confirmed),]
n=15
top_n <- head(figure_4a_max$adm_area_1,n)
figure_4a_longitudes <- unique(figure_4a_data[figure_4a_data$adm_area_1%in%top_n,c("adm_area_1","longitude")])
figure_4a_longitudes <- figure_4a_longitudes[order(figure_4a_longitudes$longitude),]
figure_4a_longitudes <- figure_4a_longitudes$adm_area_1
figure_4a_data$State <- figure_4a_data$adm_area_1
levels(figure_4a_data$State) <- c(levels(figure_4a_data$State), "Others")
figure_4a_data[!figure_4a_data$adm_area_1%in%top_n,"State"] <- "Others"
figure_4a_data$State <- factor(figure_4a_data$State, levels=c(lapply(figure_4a_longitudes, as.character), "Others"))
figure_4a_agg <- aggregate(figure_4a_data[c("new_per_day_smooth")],
by = list(figure_4a_data$State,figure_4a_data$date),
FUN = sum,
na.rm=TRUE)
figure_4a_agg <- plyr::rename(figure_4a_agg, c("Group.1"="State","Group.2"="date"))
# Figure 4: USA time series and choropleth ----------------------------------------------
# Set up colour palette
my_palette_1 <- brewer.pal(name="YlGnBu",n=4)[2]
my_palette_2 <- brewer.pal(name="YlGnBu",n=4)[4]
my_palette_3 <- "GnBu"
my_palette_4 <- brewer.pal(name="Oranges",n=4)[4]
# Viridis color palette with last item gray
v_palette <-  viridis(n+1, option="D")
v_palette[n+1] <- "#C0C0C0"
# Figure 4a: Stacked Area Time series of US counties
figure_4a <-  (ggplot(data=figure_4a_agg, aes(x=date,y=new_per_day_smooth,fill=State))
+ geom_area(alpha=0.8, colour="white", na.rm=TRUE)
+ scale_fill_manual(values = v_palette)
+ labs(title="New Cases Over Time for US States", y="New Cases per Day (Smoothed)", x="Date")
+ scale_x_date(date_breaks="months", date_labels="%b")
+ scale_y_continuous(expand=c(0,0), limits=c(0, NA))
+ theme_light()
+ legend(cex = 1.5)
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7)
,plot.margin=unit(c(0,0,0,0),"pt"), legend.position = c(0.07, 0.6)))
figure_4a
figure_4a <-  (ggplot(data=figure_4a_agg, aes(x=date,y=new_per_day_smooth,fill=State))
+ geom_area(alpha=0.8, colour="white", na.rm=TRUE)
+ scale_fill_manual(values = v_palette)
+ labs(title="New Cases Over Time for US States", y="New Cases per Day (Smoothed)", x="Date")
+ scale_x_date(date_breaks="months", date_labels="%b")
+ scale_y_continuous(expand=c(0,0), limits=c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7)
,plot.margin=unit(c(0,0,0,0),"pt"), legend.position = c(0.07, 0.6)))
figure_4a
figure_4a <-  (ggplot(data=figure_4a_agg, aes(x=date,y=new_per_day_smooth,fill=State))
+ geom_area(alpha=0.8, colour="white", na.rm=TRUE)
+ scale_fill_manual(values = v_palette)
+ labs(title="New Cases Over Time for US States", y="New Cases per Day (Smoothed)", x="Date")
+ scale_x_date(date_breaks="months", date_labels="%b")
+ scale_y_continuous(expand=c(0,0), limits=c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7)
,plot.margin=unit(c(0,0,0,0),"pt"), legend.position = c(0.09, 0.6),
legend.title = element_text(size = 14),legend.text = element_text(size = 12)))
figure_4a
# Figure 4a: Stacked Area Time series of US counties
figure_4a <-  (ggplot(data=figure_4a_agg, aes(x=date,y=new_per_day_smooth,fill=State))
+ geom_area(alpha=0.8, colour="white", na.rm=TRUE)
+ scale_fill_manual(values = v_palette)
+ labs(title="New Cases Over Time for US States", y="New Cases per Day (Smoothed)", x="Date")
+ scale_x_date(date_breaks="months", date_labels="%b")
+ scale_y_continuous(expand=c(0,0), limits=c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7)
,plot.margin=unit(c(0,0,0,0),"pt"), legend.position = c(0.09, 0.6),
legend.title = element_text(size = 12),legend.text = element_text(size = 11)))
figure_4a
ggsave("./plots/figure_4a.png", plot = figure_4a, width = 15,  height = 7)
lags <- data.frame(lag=NULL,tau_estimate=NULL,p_value=NULL)
for (lag in seq(-50,100,by=1)){
if (lag < 0){plus_minus='Minus'} else {plus_minus='Plus'}
figure_3c_wave_1_data$date <- figure_3c_wave_1_data$t0_10_dead + lag
plot_data <- merge(figure_3c_wave_1_data, figure_3c_2_data, by=c("countrycode","date"))
plot_data <- subset(plot_data, date<wave_end) # Remove if lagged date is after the end of the first wave
corr <- cor.test(plot_data$dead_during_wave_per_10k, plot_data$tests_per_10k,
method = "kendall")
p_value_str = if (corr$p.value<0.0001) {"<0.0001"} else if (corr$p.value<0.001) {"<0.001"} else {signif(corr$p.value,3)}
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",signif(corr$estimate,3)," \np-value: ",p_value_str,sep="")
my_list <- list(lag = lag, tau_estimate = corr$estimate, p_value=corr$p.value)
lags <- bind_rows(lags, my_list)
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(plot_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.85,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.15,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=0.02,y=0.02,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Deaths During First Wave Against  Early Testing (To the Date of the 10th Death",plus_minus,abs(lag),"Days",sep=" "),
x = paste("Total Tests Up Until the Date of the 10th Death",plus_minus,abs(lag),"Days, per 10,000 Population",sep=" "),
y = "Total Deaths During First Wave, per 10,000 Population"))
figure_3c
ggsave(paste("./plots/figure_3c_test_lags/figure_3c_",plus_minus,abs(lag),".png",sep=""), plot = figure_3c, width = 9,  height = 7)
}
