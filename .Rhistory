+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3a_data,
(countrycode %in% label_countries) |
#(last_dead_per_10k >= quantile(figure_3a_data$last_dead_per_10k, 0.95,na.rm=TRUE)) |
(si_integral >= quantile(figure_3a_data$si_integral, 0.95,na.rm=TRUE)) |
(si_integral <= quantile(figure_3a_data$si_integral, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=3000,y=10,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.85, 0.15))
#+ scale_color_discrete(name = "Wave Status", labels = c("First Wave", "Second Wave","Third Wave","Other"))
+ scale_x_continuous(expand=expand_scale(mult=c(0.05,0.1)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10), labels=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10))
+ labs(title = "Total Deaths Against Integral of Stringency Index", x = "Integral Under Stringency Index Curve to Date", y = "Total Deaths to Date per 10,000 Population"))
figure_3a
ggsave("./plots/figure_3a.png", plot = figure_3a, width = 9,  height = 7)
# Import Data for figure 4 -------------------------------------------------------------------
# Import csv file for figure 4: Time series and choropleth for USA
figure_4a_data <- read_csv(file="./data/figure_4a.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_4a_data$countrycode <- as.factor(figure_4a_data$countrycode)
figure_4a_data$adm_area_1 <- as.factor(figure_4a_data$adm_area_1)
figure_4b_data <- read_delim(file="./data/figure_4.csv",
delim=";",
na = c("N/A","NA","#N/A"," ",""),
col_types = cols(gid = col_factor(levels = NULL),
date = col_date(format = "%Y-%m-%d"),
fips = col_factor(levels = NULL)))
# Process Data for figure 4 -------------------------------------------------------------------
# Figure 4a processing
# Get top 10 states by total confirmed cases, group others into Others
figure_4a_max <- aggregate(figure_4a_data[c("confirmed")],
by = list(figure_4a_data$adm_area_1),
FUN = max,
na.rm=TRUE)
figure_4a_max <- plyr::rename(figure_4a_max, c("Group.1"="adm_area_1"))
figure_4a_max <- figure_4a_max[order(-figure_4a_max$confirmed),]
top_n <- head(figure_4a_max$adm_area_1,10)
figure_4a_longitudes <- unique(figure_4a_data[figure_4a_data$adm_area_1%in%top_n,c("adm_area_1","longitude")])
figure_4a_longitudes <- figure_4a_longitudes[order(figure_4a_longitudes$longitude),]
figure_4a_longitudes <- figure_4a_longitudes$adm_area_1
figure_4a_data$State <- figure_4a_data$adm_area_1
levels(figure_4a_data$State) <- c(levels(figure_4a_data$State), "Others")
figure_4a_data[!figure_4a_data$adm_area_1%in%top_n,"State"] <- "Others"
figure_4a_data$State <- factor(figure_4a_data$State, levels=c(lapply(figure_4a_longitudes, as.character), "Others"))
figure_4a_agg <- aggregate(figure_4a_data[c("new_per_day_smooth")],
by = list(figure_4a_data$State,figure_4a_data$date),
FUN = sum,
na.rm=TRUE)
figure_4a_agg <- plyr::rename(figure_4a_agg, c("Group.1"="State","Group.2"="date"))
# Figure 4: USA time series and choropleth ----------------------------------------------
# Set up colour palette
my_palette_1 <- brewer.pal(name="YlGnBu",n=4)[2]
my_palette_2 <- brewer.pal(name="YlGnBu",n=4)[4]
my_palette_3 <- "GnBu"
my_palette_4 <- brewer.pal(name="Oranges",n=4)[4]
# Viridis color palette with last item gray
v_palette <-  viridis(11, option="D")
v_palette[11] <- "#C0C0C0"
# Figure 4a: Stacked Area Time series of US counties
figure_4a <-  (ggplot(data=figure_4a_agg, aes(x=date,y=new_per_day_smooth,fill=State))
+ geom_area(alpha=0.8, colour="white", na.rm=TRUE)
+ scale_fill_manual(values = v_palette)
+ labs(title="New Cases Over Time for US States", y="New Cases per Day (Smoothed)", x="Date")
+ scale_x_date(date_breaks="months", date_labels="%b")
+ scale_y_continuous(expand=c(0,0), limits=c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7)
,plot.margin=unit(c(0,0,0,0),"pt"), legend.position = c(0.07, 0.75)))
figure_4a
# Get top 10 states by total confirmed cases, group others into Others
figure_4a_max <- aggregate(figure_4a_data[c("confirmed")],
by = list(figure_4a_data$adm_area_1),
FUN = max,
na.rm=TRUE)
figure_4a_max <- plyr::rename(figure_4a_max, c("Group.1"="adm_area_1"))
figure_4a_max <- figure_4a_max[order(-figure_4a_max$confirmed),]
top_n <- head(figure_4a_max$adm_area_1,15)
figure_4a_longitudes <- unique(figure_4a_data[figure_4a_data$adm_area_1%in%top_n,c("adm_area_1","longitude")])
figure_4a_longitudes <- figure_4a_longitudes[order(figure_4a_longitudes$longitude),]
figure_4a_longitudes <- figure_4a_longitudes$adm_area_1
figure_4a_data$State <- figure_4a_data$adm_area_1
levels(figure_4a_data$State) <- c(levels(figure_4a_data$State), "Others")
figure_4a_data[!figure_4a_data$adm_area_1%in%top_n,"State"] <- "Others"
figure_4a_data$State <- factor(figure_4a_data$State, levels=c(lapply(figure_4a_longitudes, as.character), "Others"))
figure_4a_agg <- aggregate(figure_4a_data[c("new_per_day_smooth")],
by = list(figure_4a_data$State,figure_4a_data$date),
FUN = sum,
na.rm=TRUE)
figure_4a_agg <- plyr::rename(figure_4a_agg, c("Group.1"="State","Group.2"="date"))
# Figure 4: USA time series and choropleth ----------------------------------------------
# Set up colour palette
my_palette_1 <- brewer.pal(name="YlGnBu",n=4)[2]
my_palette_2 <- brewer.pal(name="YlGnBu",n=4)[4]
my_palette_3 <- "GnBu"
my_palette_4 <- brewer.pal(name="Oranges",n=4)[4]
# Viridis color palette with last item gray
v_palette <-  viridis(11, option="D")
v_palette[11] <- "#C0C0C0"
# Figure 4a: Stacked Area Time series of US counties
figure_4a <-  (ggplot(data=figure_4a_agg, aes(x=date,y=new_per_day_smooth,fill=State))
+ geom_area(alpha=0.8, colour="white", na.rm=TRUE)
+ scale_fill_manual(values = v_palette)
+ labs(title="New Cases Over Time for US States", y="New Cases per Day (Smoothed)", x="Date")
+ scale_x_date(date_breaks="months", date_labels="%b")
+ scale_y_continuous(expand=c(0,0), limits=c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7)
,plot.margin=unit(c(0,0,0,0),"pt"), legend.position = c(0.07, 0.75)))
# Set up colour palette
my_palette_1 <- brewer.pal(name="YlGnBu",n=4)[2]
my_palette_2 <- brewer.pal(name="YlGnBu",n=4)[4]
my_palette_3 <- "GnBu"
my_palette_4 <- brewer.pal(name="Oranges",n=4)[4]
# Viridis color palette with last item gray
v_palette <-  viridis(16, option="D")
v_palette[16] <- "#C0C0C0"
# Figure 4a: Stacked Area Time series of US counties
figure_4a <-  (ggplot(data=figure_4a_agg, aes(x=date,y=new_per_day_smooth,fill=State))
+ geom_area(alpha=0.8, colour="white", na.rm=TRUE)
+ scale_fill_manual(values = v_palette)
+ labs(title="New Cases Over Time for US States", y="New Cases per Day (Smoothed)", x="Date")
+ scale_x_date(date_breaks="months", date_labels="%b")
+ scale_y_continuous(expand=c(0,0), limits=c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7)
,plot.margin=unit(c(0,0,0,0),"pt"), legend.position = c(0.07, 0.75)))
figure_4a
figure_4b_data <- read_delim(file="./data/figure_4.csv",
delim=";",
na = c("N/A","NA","#N/A"," ",""),
col_types = cols(gid = col_factor(levels = NULL),
date = col_date(format = "%Y-%m-%d"),
fips = col_factor(levels = NULL)))
ggsave("./plots/figure_4a.png", plot = figure_4a, width = 15,  height = 7)
figure_4a_data <- read_csv(file="./data/figure_4a.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_4a_data$countrycode <- as.factor(figure_4a_data$countrycode)
figure_4a_data$adm_area_1 <- as.factor(figure_4a_data$adm_area_1)
View(figure_4a_data)
# Sort by GID and date
figure_4b_data <- figure_4b_data[order(figure_4b_data$gid, figure_4b_data$date),]
# Compute new cases per day as difference between daily case total
figure_4b_data[-1,"new_cases"] <- diff(figure_4b_data$cases)
# Remove first day of each GID as it does not have a value for new cases
figure_4b_data <- figure_4b_data[duplicated(figure_4b_data$gid),]
# Set any negative values for new cases to 0
figure_4b_data[figure_4b_data$new_cases<0,"new_cases"] <- 0
# Compute new cases per 10000 popuation
figure_4b_data$new_cases_per_10k <- 10000*figure_4b_data$new_cases/figure_4b_data$Population
# Define which dates to plot in choropleth
date_1 <- as.Date("2020-04-14")
date_2 <- as.Date("2020-07-21")
figure_4b_data <- read_delim(file="./data/figure_4.csv",
delim=";",
na = c("N/A","NA","#N/A"," ",""),
col_types = cols(gid = col_factor(levels = NULL),
date = col_date(format = "%Y-%m-%d"),
fips = col_factor(levels = NULL)))
figure_4b_data <- read_delim(file="./data/figure_4.csv",
delim=";")
figure_4b_data <- read_delim(file="./data/figure_4.csv",
delim=";",
na = c("N/A","NA","#N/A"," ",""))
figure_4b_data$gid <- as.factor(figure_4b_data$gid)
figure_4b_data$fips <- as.factor(fips$adm_area_1)
figure_4b_data <- read_delim(file="./data/figure_4.csv",
delim=";",
na = c("N/A","NA","#N/A"," ",""))
figure_4b_data$gid <- as.factor(figure_4b_data$gid)
figure_4b_data$fips <- as.factor(figure_4b_data$fips)
figure_4b_data <- figure_4b_data[order(figure_4b_data$gid, figure_4b_data$date),]
# Compute new cases per day as difference between daily case total
figure_4b_data[-1,"new_cases"] <- diff(figure_4b_data$cases)
# Remove first day of each GID as it does not have a value for new cases
figure_4b_data <- figure_4b_data[duplicated(figure_4b_data$gid),]
# Set any negative values for new cases to 0
figure_4b_data[figure_4b_data$new_cases<0,"new_cases"] <- 0
# Compute new cases per 10000 popuation
figure_4b_data$new_cases_per_10k <- 10000*figure_4b_data$new_cases/figure_4b_data$Population
date_1 <- as.Date("2020-04-14")
date_2 <- as.Date("2020-07-21")
date_2 <- as.Date("2020-11-15")
# Subset for the two dates select
figure_4b1_data <- subset(figure_4b_data,date==date_1)
figure_4b2_data <- subset(figure_4b_data,date==date_2)
figure_4b3_data <- subset(figure_4b_data,date==date_3)
# Set max value to show. Censor any values above this
color_max <- 250
figure_4b1_data$new_cases_censored <- figure_4b1_data$new_cases
figure_4b1_data$new_cases_censored[figure_4b1_data$new_cases_censored > color_max] <- color_max
figure_4b2_data$new_cases_censored <- figure_4b2_data$new_cases
figure_4b2_data$new_cases_censored[figure_4b2_data$new_cases_censored > color_max] <- color_max
figure_4b3_data$new_cases_censored <- figure_4b3_data$new_cases
figure_4b3_data$new_cases_censored[figure_4b3_data$new_cases_censored > color_max] <- color_max
date_1 <- as.Date("2020-04-14")
date_2 <- as.Date("2020-07-21")
date_3 <- as.Date("2020-11-15")
# Subset for the two dates select
figure_4b1_data <- subset(figure_4b_data,date==date_1)
figure_4b2_data <- subset(figure_4b_data,date==date_2)
figure_4b3_data <- subset(figure_4b_data,date==date_3)
# Set max value to show. Censor any values above this
color_max <- 250
figure_4b1_data$new_cases_censored <- figure_4b1_data$new_cases
figure_4b1_data$new_cases_censored[figure_4b1_data$new_cases_censored > color_max] <- color_max
figure_4b2_data$new_cases_censored <- figure_4b2_data$new_cases
figure_4b2_data$new_cases_censored[figure_4b2_data$new_cases_censored > color_max] <- color_max
figure_4b3_data$new_cases_censored <- figure_4b3_data$new_cases
figure_4b3_data$new_cases_censored[figure_4b3_data$new_cases_censored > color_max] <- color_max
# Convert the dataframe for figure_4b1 and 4b2 data into spatial dataframe
# Remove rows with NA in geometry. Required to convert column to shape object
figure_4b1_data <- subset(figure_4b1_data,!is.na(geometry))
figure_4b2_data <- subset(figure_4b2_data,!is.na(geometry))
figure_4b3_data <- subset(figure_4b3_data,!is.na(geometry))
# Convert "geometry" column to a sfc shape column
figure_4b1_data$geometry <- st_as_sfc(figure_4b1_data$geometry)
figure_4b2_data$geometry <- st_as_sfc(figure_4b2_data$geometry)
figure_4b3_data$geometry <- st_as_sfc(figure_4b3_data$geometry)
# Convert dataframe to a sf shape object with "geometry" containing the shape information
figure_4b1_data <- st_sf(figure_4b1_data)
figure_4b2_data <- st_sf(figure_4b2_data)
figure_4b3_data <- st_sf(figure_4b3_data)
# Figure 4: USA time series and choropleth ----------------------------------------------
# Set up colour palette
my_palette_1 <- brewer.pal(name="YlGnBu",n=4)[2]
my_palette_2 <- brewer.pal(name="YlGnBu",n=4)[4]
my_palette_3 <- "GnBu"
my_palette_4 <- brewer.pal(name="Oranges",n=4)[4]
# Viridis color palette with last item gray
figure_4b2 <- (ggplot(data = figure_4b2_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_2), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent")))
figure_4b2
View(figure_4b2_data)
View(figure_4b_data)
figure_4b_data <- read_delim(file="./data/figure_4.csv",
delim=";",
na = c("N/A","NA","#N/A"," ",""))
figure_4b_data$gid <- as.factor(figure_4b_data$gid)
figure_4b_data$fips <- as.factor(figure_4b_data$fips)
figure_4b_data <- figure_4b_data[order(figure_4b_data$gid, figure_4b_data$date),]
# Compute new cases per day as difference between daily case total
figure_4b_data[-1,"new_cases"] <- diff(figure_4b_data$cases)
# Remove first day of each GID as it does not have a value for new cases
figure_4b_data <- figure_4b_data[duplicated(figure_4b_data$gid),]
# Set any negative values for new cases to 0
figure_4b_data[figure_4b_data$new_cases<0,"new_cases"] <- 0
# Compute new cases per 10000 popuation
figure_4b_data$new_cases_per_10k <- 10000*figure_4b_data$new_cases/figure_4b_data$Population
# Define which dates to plot in choropleth
date_1 <- as.Date("2020-04-14")
date_2 <- as.Date("2020-07-21")
date_3 <- as.Date("2020-11-15")
# Subset for the two dates select
figure_4b1_data <- subset(figure_4b_data,date==date_1)
figure_4b2_data <- subset(figure_4b_data,date==date_2)
figure_4b3_data <- subset(figure_4b_data,date==date_3)
# Set max value to show. Censor any values above this
color_max <- 250
figure_4b1_data$new_cases_censored <- figure_4b1_data$new_cases
figure_4b1_data$new_cases_censored[figure_4b1_data$new_cases_censored > color_max] <- color_max
figure_4b2_data$new_cases_censored <- figure_4b2_data$new_cases
figure_4b2_data$new_cases_censored[figure_4b2_data$new_cases_censored > color_max] <- color_max
figure_4b3_data$new_cases_censored <- figure_4b3_data$new_cases
figure_4b3_data$new_cases_censored[figure_4b3_data$new_cases_censored > color_max] <- color_max
# Convert the dataframe for figure_4b1 and 4b2 data into spatial dataframe
# Remove rows with NA in geometry. Required to convert column to shape object
figure_4b1_data <- subset(figure_4b1_data,!is.na(geometry))
figure_4b2_data <- subset(figure_4b2_data,!is.na(geometry))
figure_4b3_data <- subset(figure_4b3_data,!is.na(geometry))
# Convert "geometry" column to a sfc shape column
figure_4b1_data$geometry <- st_as_sfc(figure_4b1_data$geometry)
figure_4b2_data$geometry <- st_as_sfc(figure_4b2_data$geometry)
figure_4b3_data$geometry <- st_as_sfc(figure_4b3_data$geometry)
# Convert dataframe to a sf shape object with "geometry" containing the shape information
figure_4b1_data <- st_sf(figure_4b1_data)
figure_4b2_data <- st_sf(figure_4b2_data)
figure_4b3_data <- st_sf(figure_4b3_data)
# Figure 4: USA time series and choropleth ----------------------------------------------
# Set up colour palette
my_palette_1 <- brewer.pal(name="YlGnBu",n=4)[2]
my_palette_2 <- brewer.pal(name="YlGnBu",n=4)[4]
my_palette_3 <- "GnBu"
my_palette_4 <- brewer.pal(name="Oranges",n=4)[4]
figure_4b_data <- read_delim(file="./data/figure_4_t.csv",
delim=";",
na = c("N/A","NA","#N/A"," ",""))
figure_4b_data_t <- read_delim(file="./data/figure_4_t.csv",
delim=";",
na = c("N/A","NA","#N/A"," ",""))
figure_4b_data <- read_delim(file="./data/figure_4.csv",
delim=";",
na = c("N/A","NA","#N/A"," ",""))
figure_4b_data$gid <- as.factor(figure_4b_data$gid)
figure_4b_data$fips <- as.factor(figure_4b_data$fips)
View(figure_4b_data_t)
View(figure_4b_data)
figure_4b_data <- figure_4b_data[order(figure_4b_data$gid, figure_4b_data$date),]
# Compute new cases per day as difference between daily case total
figure_4b_data[-1,"new_cases"] <- diff(figure_4b_data$cases)
# Remove first day of each GID as it does not have a value for new cases
figure_4b_data <- figure_4b_data[duplicated(figure_4b_data$gid),]
# Set any negative values for new cases to 0
figure_4b_data[figure_4b_data$new_cases<0,"new_cases"] <- 0
# Compute new cases per 10000 popuation
figure_4b_data$new_cases_per_10k <- 10000*figure_4b_data$new_cases/figure_4b_data$Population
# Define which dates to plot in choropleth
date_1 <- as.Date("2020-04-14")
date_2 <- as.Date("2020-07-21")
date_3 <- as.Date("2020-11-15")
# Subset for the two dates select
figure_4b1_data <- subset(figure_4b_data,date==date_1)
figure_4b2_data <- subset(figure_4b_data,date==date_2)
figure_4b3_data <- subset(figure_4b_data,date==date_3)
# Set max value to show. Censor any values above this
color_max <- 250
figure_4b1_data$new_cases_censored <- figure_4b1_data$new_cases
figure_4b1_data$new_cases_censored[figure_4b1_data$new_cases_censored > color_max] <- color_max
figure_4b2_data$new_cases_censored <- figure_4b2_data$new_cases
figure_4b2_data$new_cases_censored[figure_4b2_data$new_cases_censored > color_max] <- color_max
figure_4b3_data$new_cases_censored <- figure_4b3_data$new_cases
figure_4b3_data$new_cases_censored[figure_4b3_data$new_cases_censored > color_max] <- color_max
# Convert the dataframe for figure_4b1 and 4b2
View(figure_4b3_data)
# Convert the dataframe for figure_4b1 and 4b2 data into spatial dataframe
# Remove rows with NA in geometry. Required to convert column to shape object
figure_4b1_data <- subset(figure_4b1_data,!is.na(geometry))
figure_4b2_data <- subset(figure_4b2_data,!is.na(geometry))
figure_4b3_data <- subset(figure_4b3_data,!is.na(geometry))
figure_4b1_data$geometry <- st_as_sfc(figure_4b1_data$geometry)
View(figure_4b1_data)
figure_4b_data <- read_delim(file="./data/figure_4.csv",
delim=";",
na = c("N/A","NA","#N/A"," ","","None"))
figure_4b_data$gid <- as.factor(figure_4b_data$gid)
figure_4b_data$fips <- as.factor(figure_4b_data$fips)
figure_4b_data <- figure_4b_data[order(figure_4b_data$gid, figure_4b_data$date),]
# Compute new cases per day as difference between daily case total
figure_4b_data[-1,"new_cases"] <- diff(figure_4b_data$cases)
# Remove first day of each GID as it does not have a value for new cases
figure_4b_data <- figure_4b_data[duplicated(figure_4b_data$gid),]
# Set any negative values for new cases to 0
figure_4b_data[figure_4b_data$new_cases<0,"new_cases"] <- 0
# Compute new cases per 10000 popuation
figure_4b_data$new_cases_per_10k <- 10000*figure_4b_data$new_cases/figure_4b_data$Population
# Define which dates to plot in choropleth
date_1 <- as.Date("2020-04-14")
date_2 <- as.Date("2020-07-21")
date_3 <- as.Date("2020-11-15")
# Subset for the two dates select
figure_4b1_data <- subset(figure_4b_data,date==date_1)
figure_4b2_data <- subset(figure_4b_data,date==date_2)
figure_4b3_data <- subset(figure_4b_data,date==date_3)
# Set max value to show. Censor any values above this
color_max <- 250
figure_4b1_data$new_cases_censored <- figure_4b1_data$new_cases
figure_4b1_data$new_cases_censored[figure_4b1_data$new_cases_censored > color_max] <- color_max
figure_4b2_data$new_cases_censored <- figure_4b2_data$new_cases
figure_4b2_data$new_cases_censored[figure_4b2_data$new_cases_censored > color_max] <- color_max
figure_4b3_data$new_cases_censored <- figure_4b3_data$new_cases
figure_4b3_data$new_cases_censored[figure_4b3_data$new_cases_censored > color_max] <- color_max
# Convert the dataframe for figure_4b1 and 4b2 data into spatial dataframe
# Remove rows with NA in geometry. Required to convert column to shape object
figure_4b1_data <- subset(figure_4b1_data,!is.na(geometry))
figure_4b2_data <- subset(figure_4b2_data,!is.na(geometry))
figure_4b3_data <- subset(figure_4b3_data,!is.na(geometry))
# Convert "geometry" column to a sfc shape column
figure_4b1_data$geometry <- st_as_sfc(figure_4b1_data$geometry)
figure_4b2_data$geometry <- st_as_sfc(figure_4b2_data$geometry)
figure_4b3_data$geometry <- st_as_sfc(figure_4b3_data$geometry)
# Convert dataframe to a sf shape object with "geometry" containing the shape information
figure_4b1_data <- st_sf(figure_4b1_data)
figure_4b2_data <- st_sf(figure_4b2_data)
figure_4b3_data <- st_sf(figure_4b3_data)
# Figure 4b: Choropleth of US counties at USA peak dates
figure_4b1 <- (ggplot(data = figure_4b1_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA, na.rm=TRUE)
+ labs(title=paste("New Cases per Day per United States County at",date_1), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent")))
figure_4b1
figure_4b1 <- (ggplot(data = figure_4b1_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA, na.rm=TRUE)
+ labs(title=paste("New Cases per Day per United States County at",date_1), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent")))
ggsave("./plots/figure_4b1.png", plot = figure_4b1, width = 9,  height = 7)
figure_4b2 <- (ggplot(data = figure_4b2_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_2), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent")))
ggsave("./plots/figure_4b2.png", plot = figure_4b2, width = 9,  height = 7)
figure_4b3 <- (ggplot(data = figure_4b3_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_3), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent")))
ggsave("./plots/figure_4b3.png", plot = figure_4b2, width = 9,  height = 7)
figure_4b3
ggsave("./plots/figure_4b3.png", plot = figure_4b3, width = 9,  height = 7)
figure_4b3 <- (ggplot(data = figure_4b3_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_3), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent"),legend.position="bottom"))
figure_4b3
figure_4b3 <- (ggplot(data = figure_4b3_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_3), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ guides(fill = guide_colourbar(barwidth = 0.5, barheight = 10))
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent"),legend.position="bottom"))
figure_4b3
figure_4b3 <- (ggplot(data = figure_4b3_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_3), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ guides(fill = guide_colourbar(barwidth = 50, barheight = 1))
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent"),legend.position="bottom"))
figure_4b3
ggsave("./plots/figure_4b3.png", plot = figure_4b3, width = 9,  height = 7)
figure_4b3 <- (ggplot(data = figure_4b3_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_3), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ guides(fill = guide_colourbar(barwidth = 50, barheight = 1, reverse=T))
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent"),legend.position="bottom"))
figure_4b3
figure_4b3 <- (ggplot(data = figure_4b3_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_3), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ guides(fill = guide_colourbar(barwidth = 35, barheight = 0.7, reverse=T))
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent"),legend.position="bottom"))
ggsave("./plots/figure_4b3.png", plot = figure_4b3, width = 9,  height = 7)
figure_4b3 <- (ggplot(data = figure_4b3_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_3), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ guides(fill = guide_colourbar(barwidth = 30, barheight = 0.6, reverse=T))
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent"),legend.position="bottom",legend.title.align=0))
figure_4b3
# Figure 4b: Choropleth of US counties at USA peak dates
figure_4b1 <- (ggplot(data = figure_4b1_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA, na.rm=TRUE)
+ labs(title=paste("New Cases per Day per United States County at",date_1), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ guides(fill = guide_colourbar(barwidth = 30, barheight = 0.6, reverse=T))
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent"),legend.position="bottom"))
ggsave("./plots/figure_4b1.png", plot = figure_4b1, width = 9,  height = 7)
figure_4b2 <- (ggplot(data = figure_4b2_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_2), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ guides(fill = guide_colourbar(barwidth = 30, barheight = 0.6, reverse=T))
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent"),legend.position="bottom"))
ggsave("./plots/figure_4b2.png", plot = figure_4b2, width = 9,  height = 7)
figure_4b3 <- (ggplot(data = figure_4b3_data)
+ geom_sf(aes(fill=new_cases_censored), lwd=0, color=NA)
+ labs(title=paste("New Cases per Day per United States County at",date_3), fill="New Cases per Day")
+ scale_fill_distiller(palette=my_palette_3, trans="reverse", limits=c(color_max,0))
+ scale_x_continuous(expand=c(0,0), limits=c(-125, -65)) # coordinates are cropped to exclude Alaska
+ scale_y_continuous(expand=c(0,0), limits=c(24, 50))
+ theme_void()
+ guides(fill = guide_colourbar(barwidth = 30, barheight = 0.6, reverse=T))
+ theme(plot.title = element_text(hjust = 0.5), panel.grid.major=element_line(colour = "transparent"),legend.position="bottom"))
ggsave("./plots/figure_4b3.png", plot = figure_4b3, width = 9,  height = 7)
