+ geom_text(aes(x=3000,y=10,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.85, 0.15))
#+ scale_color_discrete(name = "Wave Status", labels = c("First Wave", "Second Wave","Third Wave","Other"))
+ scale_x_continuous(expand=expand_scale(mult=c(0.05,0.1)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10), labels=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10))
+ labs(title = "Total Deaths Against Integral of Stringency Index", x = "Integral Under Stringency Index Curve to Date", y = "Total Deaths to Date per 10,000 Population"))
figure_3a
corr <- cor.test(figure_3a_data$si_integral, figure_3a_data$last_dead_per_10k,
method = "kendall")
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",corr$estimate," \np-value: ",corr$p.value,sep="")
figure_3a <- (ggplot(figure_3a_data, aes(x = si_integral, y = last_dead_per_10k, color = fast_responder))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3a_data,
(countrycode %in% label_countries) |
#(last_dead_per_10k >= quantile(figure_3a_data$last_dead_per_10k, 0.95,na.rm=TRUE)) |
(si_integral >= quantile(figure_3a_data$si_integral, 0.95,na.rm=TRUE)) |
(si_integral <= quantile(figure_3a_data$si_integral, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=3000,y=10,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.85, 0.15))
#+ scale_color_discrete(name = "Wave Status", labels = c("First Wave", "Second Wave","Third Wave","Other"))
+ scale_x_continuous(expand=expand_scale(mult=c(0.05,0.1)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10), labels=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10))
+ labs(title = "Total Deaths Against Integral of Stringency Index", x = "Integral Under Stringency Index Curve to Date", y = "Total Deaths to Date per 10,000 Population"))
figure_3a
ggsave("./plots/figure_3a_fast_0.png", plot = figure_3a, width = 9,  height = 7)
# Plot Figure 3a ------------------------------------------------------------
# Figure 3: Scatter plot of government response time against number of cases for each country
corr <- cor.test(figure_3a_data$si_integral, figure_3a_data$last_dead_per_10k,
method = "kendall")
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",corr$estimate," \np-value: ",corr$p.value,sep="")
figure_3a <- (ggplot(figure_3a_data, aes(x = si_integral, y = last_dead_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3a_data,
(countrycode %in% label_countries) |
#(last_dead_per_10k >= quantile(figure_3a_data$last_dead_per_10k, 0.95,na.rm=TRUE)) |
(si_integral >= quantile(figure_3a_data$si_integral, 0.95,na.rm=TRUE)) |
(si_integral <= quantile(figure_3a_data$si_integral, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=3000,y=10,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.85, 0.15))
#+ scale_color_discrete(name = "Wave Status", labels = c("First Wave", "Second Wave","Third Wave","Other"))
+ scale_x_continuous(expand=expand_scale(mult=c(0.05,0.1)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10), labels=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10))
+ labs(title = "Total Deaths Against Integral of Stringency Index", x = "Integral Under Stringency Index Curve to Date", y = "Total Deaths to Date per 10,000 Population"))
figure_3a
ggsave("./plots/figure_3a.png", plot = figure_3a, width = 9,  height = 7)
figure_3a <- (ggplot(figure_3a_data, aes(x = si_integral, y = last_dead_per_10k, color=class_coarse))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3a_data,
(countrycode %in% label_countries) |
#(last_dead_per_10k >= quantile(figure_3a_data$last_dead_per_10k, 0.95,na.rm=TRUE)) |
(si_integral >= quantile(figure_3a_data$si_integral, 0.95,na.rm=TRUE)) |
(si_integral <= quantile(figure_3a_data$si_integral, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=3000,y=10,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.85, 0.15))
+ scale_color_discrete(name = "Wave Status", labels = c("First Wave", "Second Wave","Third Wave","Other"))
+ scale_x_continuous(expand=expand_scale(mult=c(0.05,0.1)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10), labels=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10))
+ labs(title = "Total Deaths Against Integral of Stringency Index", x = "Integral Under Stringency Index Curve to Date", y = "Total Deaths to Date per 10,000 Population"))
figure_3a
ggsave("./plots/figure_3a_class.png", plot = figure_3a, width = 9,  height = 7)
# Check fast vs slow responders
figure_3b_wave_1_data$fast_responder <- figure_3b_wave_1_data$response_time_alt < -10
figure_3a_data <- merge(figure_3a_data, figure_3b_wave_1_data[c('countrycode','fast_responder')], by = "countrycode", all.x=TRUE)
figure_3a <- (ggplot(figure_3a_data, aes(x = si_integral, y = last_dead_per_10k, color=fast_responder))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3a_data,
(countrycode %in% label_countries) |
#(last_dead_per_10k >= quantile(figure_3a_data$last_dead_per_10k, 0.95,na.rm=TRUE)) |
(si_integral >= quantile(figure_3a_data$si_integral, 0.95,na.rm=TRUE)) |
(si_integral <= quantile(figure_3a_data$si_integral, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=3000,y=10,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.85, 0.15))
#+ scale_color_discrete(name = "Wave Status", labels = c("First Wave", "Second Wave","Third Wave","Other"))
+ scale_x_continuous(expand=expand_scale(mult=c(0.05,0.1)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10), labels=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10))
+ labs(title = "Total Deaths Against Integral of Stringency Index", x = "Integral Under Stringency Index Curve to Date", y = "Total Deaths to Date per 10,000 Population"))
figure_3a
ggsave("./plots/figure_3a_fast_minus_10.png", plot = figure_3a, width = 9,  height = 7)
View(figure_3a_data)
figure_3a <- (ggplot(figure_3a_data, aes(x = si_integral, y = last_dead_per_10k, color=fast_responder.y))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3a_data,
(countrycode %in% label_countries) |
#(last_dead_per_10k >= quantile(figure_3a_data$last_dead_per_10k, 0.95,na.rm=TRUE)) |
(si_integral >= quantile(figure_3a_data$si_integral, 0.95,na.rm=TRUE)) |
(si_integral <= quantile(figure_3a_data$si_integral, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=3000,y=10,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.85, 0.15))
#+ scale_color_discrete(name = "Wave Status", labels = c("First Wave", "Second Wave","Third Wave","Other"))
+ scale_x_continuous(expand=expand_scale(mult=c(0.05,0.1)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10), labels=c(0.001,0.003,0.01,0.03,0.1,0.3,1,3,10))
+ labs(title = "Total Deaths Against Integral of Stringency Index", x = "Integral Under Stringency Index Curve to Date", y = "Total Deaths to Date per 10,000 Population"))
figure_3a
ggsave("./plots/figure_3a_fast_minus_10.png", plot = figure_3a, width = 9,  height = 7)
figure_3b_wave_1_data <- subset(figure_3b_wave_1_data,population<500000)
# Process data for 3b: remove all second wave observations
figure_3b_wave_1_data <- subset(figure_3b_wave_data,wave==1)
figure_3b_wave_1_data <- subset(figure_3b_wave_1_data,country!="Qatar") # Qatar is badly classified
# Calculate response time as date SI reaches threshold - date of T0
figure_3b_wave_1_data$response_time_alt <- figure_3b_wave_1_data$first_date_si_above_threshold - figure_3b_wave_1_data$t0_10_dead
figure_3b_wave_1_data$response_time_alt = as.numeric(figure_3b_wave_1_data$response_time_alt)
# Remove any where the date SI reaches threshold is no longer during the first wave
figure_3b_wave_1_data <- subset(figure_3b_wave_1_data,first_date_si_above_threshold<wave_end)
# Remove very small countries as their T0 are skewed
figure_3b_wave_1_data <- subset(figure_3b_wave_1_data,population>=500000)
corr <- cor.test(figure_3b_wave_1_data$dead_during_wave_per_10k, figure_3b_wave_1_data$response_time_alt,
method = "kendall")
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",corr$estimate," \np-value: ",corr$p.value,sep="")
corr
# Plot Figure 3: Scatter plot of government response time against number of cases for each country
figure_3b_wave_1 <- (ggplot(figure_3b_wave_1_data, aes(x = response_time_alt, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3b_wave_1_data,
(countrycode %in% label_countries) |
(response_time_alt >= quantile(figure_3b_wave_1_data$response_time_alt, 0.8,na.rm=TRUE)) |
(response_time_alt <= quantile(figure_3b_wave_1_data$response_time_alt, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=1,y=0.01,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
#+ scale_color_manual(values = my_palette_1, name = "Wave", labels = c("First Wave", "Second Wave"))
+ scale_x_continuous(trans=pseudolog10_trans, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10', breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = "Total Deaths During First Wave Against Government Response Time", x = "Government Response Time (Days from 10th Death to Stringency Index of 59 or Above)", y = "Total Deaths During First Wave per 10,000 Population"))
ggsave("./plots/figure_3b_wave_1.png", plot = figure_3b_wave_1, width = 9,  height = 7)
figure_3b_wave_1
#-----------------------------------------------------------------------------------
# Process Data for Figure 2 ------------------------------------------------
# Define which countries to plot
country_a = "Australia"
country_b = "Belgium"
country_c = "United States"
country_d = "Zambia"
# Plot Figure 2 - with individual subplots and grid arrange ---------------------------------
# Set up colour palette
my_palette_1 <- brewer.pal(name="YlGnBu",n=4)[2]
my_palette_2 <- brewer.pal(name="YlGnBu",n=4)[4]
my_palette_3 <- brewer.pal(name="Oranges",n=4)[4]
# Cut the positive rate before April due to low denominator
figure_2_data[figure_2_data$date<'2020-04-01','positive_rate'] <- NA
# Individual subplots
figure_2_a_1 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_a, y="New Cases per Day", x=element_blank())
+ theme_light()
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_a_2 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(y="Deaths per Day",x=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_a=max(subset(figure_2_data,country==country_a)$new_tests,na.rm=TRUE)
max_positive_rate_a=max(subset(figure_2_data,country==country_a)$positive_rate_smooth,na.rm=TRUE)
figure_2_a_3 <- (ggplot(subset(figure_2_data,country==country_a))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate_smooth*(max_tests_a/max_positive_rate_a)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = "Tests per Day",
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_a/max_positive_rate_a), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_b_1 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_b,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_b_2 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_b=max(subset(figure_2_data,country==country_b)$new_tests,na.rm=TRUE)
max_positive_rate_b=max(subset(figure_2_data,country==country_b)$positive_rate_smooth,na.rm=TRUE)
figure_2_b_3 <- (ggplot(subset(figure_2_data,country==country_b))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate_smooth*(max_tests_b/max_positive_rate_b)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_b/max_positive_rate_b), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_c_1 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_c,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_c_2 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_c=max(subset(figure_2_data,country==country_c)$new_tests,na.rm=TRUE)
max_positive_rate_c=max(subset(figure_2_data,country==country_c)$positive_rate_smooth,na.rm=TRUE)
figure_2_c_3 <- (ggplot(subset(figure_2_data,country==country_c))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate_smooth*(max_tests_c/max_positive_rate_c)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_c/max_positive_rate_c), name = element_blank()))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
figure_2_d_1 <- (ggplot(subset(figure_2_data,country==country_d))
+ geom_line(aes(x = date, y = new_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(title=country_d,x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title=element_text(size=12, hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
figure_2_d_2 <- (ggplot(subset(figure_2_data,country==country_d))
+ geom_line(aes(x = date, y = dead_per_day),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = dead_per_day_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ labs(x=element_blank(),y=element_blank())
+ scale_y_continuous(expand = c(0,0),limits = c(0, NA))
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt")))
max_tests_c=max(subset(figure_2_data,country==country_d)$new_tests,na.rm=TRUE)
max_positive_rate_c=max(subset(figure_2_data,country==country_d)$positive_rate_smooth,na.rm=TRUE)
figure_2_d_3 <- (ggplot(subset(figure_2_data,country==country_d))
+ geom_line(aes(x = date, y = new_tests),size=0.7,color=my_palette_1,na.rm=TRUE)
+ geom_line(aes(x = date, y = new_tests_smooth),size=1,color=my_palette_2,na.rm=TRUE)
+ geom_line(aes(x = date, y = positive_rate_smooth*(max_tests_c/max_positive_rate_c)),color=my_palette_3,na.rm=TRUE)
+ scale_y_continuous(name = element_blank(),
expand = c(0,0),limits = c(0, NA),
sec.axis = sec_axis(~./(max_tests_c/max_positive_rate_c), name = "Positive Rate"))
+ labs(x="Date")
+ theme_light()
+ theme(plot.title = element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7),plot.margin=unit(c(0,0,0,0),"pt"),
axis.title.y.left = element_text(color=my_palette_2), axis.title.y.right = element_text(color=my_palette_3)))
# Combining subplots
figure_2_all <- egg::ggarrange(figure_2_a_1,figure_2_b_1,figure_2_c_1,figure_2_d_1,
figure_2_a_2,figure_2_b_2,figure_2_c_2,figure_2_d_2,
figure_2_a_3,figure_2_b_3,figure_2_c_3,figure_2_d_3,
ncol=4)
figure_2_all <- annotate_figure(figure_2_all,
top = text_grob("Figure 2: Cases, Deaths and Testing Over Time", size = 14))
figure_2_all
figure_2_all
figure_2_all
figure_2_all <- egg::ggarrange(figure_2_a_1,figure_2_b_1,figure_2_c_1,figure_2_d_1,
figure_2_a_2,figure_2_b_2,figure_2_c_2,figure_2_d_2,
figure_2_a_3,figure_2_b_3,figure_2_c_3,figure_2_d_3,
ncol=4)
figure_2_all <- annotate_figure(figure_2_all,
top = text_grob("Figure 2: Cases, Deaths and Testing Over Time", size = 14))
# Import csv file for Figure 3c at the wave level
figure_3c_1_data <- read_csv("./data/figure_3c_1.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3c_1_data$countrycode = as.factor(figure_3c_1_data$countrycode)
figure_3c_1_data$country = as.factor(figure_3c_1_data$country)
figure_3c_1_data$class = as.factor(figure_3c_1_data$class)
figure_3c_1_data$wave = as.factor(figure_3c_1_data$wave)
# Import csv file for Figure 3c testing data
figure_3c_2_data <- read_csv("./data/figure_3c_2.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3c_2_data$countrycode = as.factor(figure_3c_2_data$countrycode)
# Import csv file for Figure 3c at the wave level
figure_3c_1_data <- read_csv("./data/figure_3c_1.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3c_1_data$countrycode = as.factor(figure_3c_1_data$countrycode)
figure_3c_1_data$country = as.factor(figure_3c_1_data$country)
figure_3c_1_data$class = as.factor(figure_3c_1_data$class)
figure_3c_1_data$wave = as.factor(figure_3c_1_data$wave)
# Import csv file for Figure 3c testing data
figure_3c_2_data <- read_csv("./data/figure_3c_2.csv",
na = c("N/A","NA","#N/A"," ",""))
figure_3c_2_data$countrycode = as.factor(figure_3c_2_data$countrycode)
lag <- 21
figure_3_c_1_data <- subset(figure_3_c_1_data,wave==1)
figure_3_c_1_data <- subset(figure_3_c_1_data,country!="Qatar") # Qatar is badly classified
# Remove very small countries as their T0 are skewed
figure_3_c_1_data <- subset(figure_3_c_1_data,population>=500000)
# Process data for 3c: remove all second wave observations
figure_3c_1_data <- subset(figure_3c_1_data,wave==1)
figure_3c_1_data <- subset(figure_3c_1_data,country!="Qatar") # Qatar is badly classified
# Remove very small countries as their T0 are skewed
figure_3c_1_data <- subset(figure_3c_1_data,population>=500000)
# Add column for tests per population
figure_3c_2_data <- merge(figure_3c_2_data, figure_3c_1_data[c('countrycode','population')], by='countrycode')
# join it on the date and countrycode
View(figure_3c_1_data)
figure_3c_1_data$dead_during_wave_per_10k <- figure_3c_1_data$dead_during_wave * 10000 / figure_3c_1_data$population
figure_3c_2_data$tests_per_10k <- figure_3c_2_data$tests * 10000 / figure_3c_2_data$population
figure_3c_1_data$date <- figure_3c_1_data$t0_10_dead - lag
View(figure_3c_1_data)
plot_data <- merge(figure_3c_1_data, figure_3c_2_data, by=c("countrycode","date"))
View(plot_data)
corr <- cor.test(plot_data$dead_during_wave_per_10k, plot_data$tests,
method = "kendall")
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",corr$estimate," \np-value: ",corr$p.value,sep="")
corr
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3b_wave_1_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.9,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=1,y=0.01,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10')#, breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Total Deaths During First Wave Against Total Tests Up Til T0 Minus ",str(lag)," Days",sep=""),
x = paste("Total Tests Up Til T0 Minus ",str(lag)," Days, per 10,000 Population",sep=""),
y = "Total Deaths During First Wave per 10,000 Population"))
figure_3c_1_data$date <- figure_3c_1_data$t0_10_dead - lag
plot_data <- merge(figure_3c_1_data, figure_3c_2_data, by=c("countrycode","date"))
corr <- cor.test(plot_data$dead_during_wave_per_10k, plot_data$tests_per_10k,
method = "kendall")
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",corr$estimate," \np-value: ",corr$p.value,sep="")
corr_text
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(figure_3b_wave_1_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.9,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=1,y=0.01,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10')#, breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Total Deaths During First Wave Against Total Tests Up Til T0 Minus ",str(lag)," Days",sep=""),
x = paste("Total Tests Up Til T0 Minus ",str(lag)," Days, per 10,000 Population",sep=""),
y = "Total Deaths During First Wave per 10,000 Population"))
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(plot_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.9,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=1,y=0.01,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10')#, breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Total Deaths During First Wave Against Total Tests Up Til T0 Minus ",str(lag)," Days",sep=""),
x = paste("Total Tests Up Til T0 Minus ",str(lag)," Days, per 10,000 Population",sep=""),
y = "Total Deaths During First Wave per 10,000 Population"))
figure_3c
lag
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(plot_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.9,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=0.2,y=0.2,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10')#, breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Total Deaths During First Wave Against Total Tests Up Til T0 Minus ",lag," Days",sep=""),
x = paste("Total Tests Up Til T0 Minus ",lag," Days, per 10,000 Population",sep=""),
y = "Total Deaths During First Wave per 10,000 Population"))
figure_3c
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(plot_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.9,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=0.05,y=0.05,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10')#, breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Total Deaths During First Wave Against Total Tests Up Til T0 Minus ",lag," Days",sep=""),
x = paste("Total Tests Up Til T0 Minus ",lag," Days, per 10,000 Population",sep=""),
y = "Total Deaths During First Wave per 10,000 Population"))
figure_3c
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(plot_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.9,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=0.02,y=0.02,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10')#, breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Total Deaths During First Wave Against Total Tests Up Til T0 Minus ",lag," Days",sep=""),
x = paste("Total Tests Up Til T0 Minus ",lag," Days, per 10,000 Population",sep=""),
y = "Total Deaths During First Wave per 10,000 Population"))
figure_3c
ggsave(paste("./plots/figure_3c_test_lags/figure_3c_lag",lag,".png"), plot = figure_3c, width = 9,  height = 7)
for (lag in c(-100,-75,-50,-35,-28,-24,-21,-17,-14,-10,-7,-5,-2,0,2,5,7,10,14,17,21,24,28,35,50,75,100)){
figure_3c_1_data$date <- figure_3c_1_data$t0_10_dead - lag
plot_data <- merge(figure_3c_1_data, figure_3c_2_data, by=c("countrycode","date"))
plot_data <- subset(plot_data, date<wave_end) # Remove if lagged date is after the end of the first wave
corr <- cor.test(plot_data$dead_during_wave_per_10k, plot_data$tests_per_10k,
method = "kendall")
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",corr$estimate," \np-value: ",corr$p.value,sep="")
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(plot_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.9,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=0.02,y=0.02,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10')#, breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Total Deaths During First Wave Against Total Tests Up Til T0 Minus ",lag," Days",sep=""),
x = paste("Total Tests Up Til T0 Minus ",lag," Days, per 10,000 Population",sep=""),
y = "Total Deaths During First Wave per 10,000 Population"))
figure_3c
ggsave(paste("./plots/figure_3c_test_lags/figure_3c_lag",lag,".png"), plot = figure_3c, width = 9,  height = 7)
}
for (lag in c(-100,-75,-50,-35,-28,-24,-21,-17,-14,-10,-7,-5,-2,0,2,5,7,10,14,17,21,24,28,35,50,75,100)){
if (lag < 0){plus_minus='Minus'} else {plus_minus='Plus'}
figure_3c_1_data$date <- figure_3c_1_data$t0_10_dead + lag
plot_data <- merge(figure_3c_1_data, figure_3c_2_data, by=c("countrycode","date"))
plot_data <- subset(plot_data, date<wave_end) # Remove if lagged date is after the end of the first wave
corr <- cor.test(plot_data$dead_during_wave_per_10k, plot_data$tests_per_10k,
method = "kendall")
corr_text = paste("Kendall's Rank Correlation \nTau Estimate: ",corr$estimate," \np-value: ",corr$p.value,sep="")
# Plot Figure 3c: Scatter plot of tests against number of cases for each country
figure_3c <- (ggplot(plot_data, aes(x = tests_per_10k, y = dead_during_wave_per_10k))
+ geom_point(size=1.5,shape=1,alpha=0.9,stroke=1.5, na.rm=TRUE)
+ geom_text(data=subset(plot_data,
(countrycode %in% label_countries) |
(tests_per_10k >= quantile(plot_data$tests_per_10k, 0.9,na.rm=TRUE)) |
(tests_per_10k <= quantile(plot_data$tests_per_10k, 0.05,na.rm=TRUE))),
aes(label=country),
hjust=-0.1, vjust=-0.1,
show.legend = FALSE)
+ geom_text(aes(x=0.02,y=0.02,hjust=0,label=corr_text),size=4, hjust=0, color='black')
+ theme_light()
+ theme(plot.title=element_text(hjust = 0.5), axis.line=element_line(color="black",size=0.7),axis.ticks=element_line(color="black",size=0.7), legend.position=c(0.6, 0.15))
+ scale_x_continuous(trans='log10')#, breaks=c(-200,-100,-30,-10,-3,-1,0,1,3,10,30))#, expand=expand_scale(mult=c(0.05,0.2)))
+ scale_y_continuous(trans='log10')#, breaks=c(0.001,0.01,0.1,1,10))
+ labs(title = paste("Total Deaths During First Wave Against Total Tests Up Til T0 Minus ",lag," Days",sep=""),
x = paste("Total Tests Up Til T0",plus_minus,lag,"Days, per 10,000 Population",sep=" "),
y = "Total Deaths During First Wave per 10,000 Population"))
figure_3c
ggsave(paste("./plots/figure_3c_test_lags/figure_3c_",plus_minus,lag,".png",sep=""), plot = figure_3c, width = 9,  height = 7)
plus_minus
lag
